/*
 * HeliumMS Dominis API
 * Microservei de Dominis de HeliumMS
 *
 * OpenAPI spec version: 1.0.0
 * Contact: limit@limit.es
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package net.conselldemallorca.helium.ms.domini.client.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

//import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Domini
 */
public class Domini {
	@JsonProperty("id")
	private Long id = null;

	@JsonProperty("codi")
	private String codi = null;

	@JsonProperty("nom")
	private String nom = null;

	/**
	 * Gets or Sets tipus
	 */
	public enum TipusEnum {
		SQL("CONSULTA_SQL"), WS("CONSULTA_WS"), REST("CONSULTA_REST");

		private String value;

		TipusEnum(String value) {
			this.value = value;
		}

		@JsonValue
		public String getValue() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}

		@JsonCreator
		public static TipusEnum fromValue(String text) {
			for (TipusEnum b : TipusEnum.values()) {
				if (String.valueOf(b.value).equals(text)) {
					return b;
				}
			}
			return null;
		}

	}

	@JsonProperty("tipus")
	private TipusEnum tipus = null;

	@JsonProperty("url")
	private String url = null;

	/**
	 * Gets or Sets tipusAuth
	 */
	public enum TipusAuthEnum {
		NONE("NONE"), HTTP_BASIC("HTTP_BASIC"), USERNAMETOKEN("USERNAMETOKEN");

		private String value;

		TipusAuthEnum(String value) {
			this.value = value;
		}

		@JsonValue
		public String getValue() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}

		@JsonCreator
		public static TipusAuthEnum fromValue(String text) {
			for (TipusAuthEnum b : TipusAuthEnum.values()) {
				if (String.valueOf(b.value).equals(text)) {
					return b;
				}
			}
			return null;
		}

	}

	@JsonProperty("tipusAuth")
	private TipusAuthEnum tipusAuth = null;

	/**
	 * Gets or Sets origenCredencials
	 */
	public enum OrigenCredencialsEnum {
		ATRIBUTS("ATRIBUTS"), PROPERTIES("PROPERTIES");

		private String value;

		OrigenCredencialsEnum(String value) {
			this.value = value;
		}

		@JsonValue
		public String getValue() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}

		@JsonCreator
		public static OrigenCredencialsEnum fromValue(String text) {
			for (OrigenCredencialsEnum b : OrigenCredencialsEnum.values()) {
				if (String.valueOf(b.value).equals(text)) {
					return b;
				}
			}
			return null;
		}

	}

	@JsonProperty("origenCredencials")
	private OrigenCredencialsEnum origenCredencials = null;

	@JsonProperty("usuari")
	private String usuari = null;

	@JsonProperty("contrasenya")
	private String contrasenya = null;

	@JsonProperty("sql")
	private String sql = null;

	@JsonProperty("jndiDatasource")
	private String jndiDatasource = null;

	@JsonProperty("descripcio")
	private String descripcio = null;

	@JsonProperty("cacheSegons")
	private Integer cacheSegons = null;

	@JsonProperty("timeout")
	private Integer timeout = null;

	@JsonProperty("ordreParams")
	private String ordreParams = null;

	@JsonProperty("entorn")
	private Long entornId = null;

	@JsonProperty("expedientTipus")
	private Long expedientTipusId = null;

	@JsonProperty("heretat")
	private boolean heretat = false;

	@JsonProperty("sobreescriu")
	private boolean sobreescriu = false;

	/**
	 * Get id
	 * 
	 * @return id
	 **/
	// @Schema(example = "1234", description = "")
	public Long getId() {
		return id;
	}

	public Domini codi(String codi) {
		this.codi = codi;
		return this;
	}

	/**
	 * Get codi
	 * 
	 * @return codi
	 **/
	public String getCodi() {
		return codi;
	}

	public void setCodi(String codi) {
		this.codi = codi;
	}

	public Domini nom(String nom) {
		this.nom = nom;
		return this;
	}

	/**
	 * Get nom
	 * 
	 * @return nom
	 **/
	public String getNom() {
		return nom;
	}

	public void setNom(String nom) {
		this.nom = nom;
	}

	public Domini tipus(TipusEnum tipus) {
		this.tipus = tipus;
		return this;
	}

	/**
	 * Get tipus
	 * 
	 * @return tipus
	 **/
	public TipusEnum getTipus() {
		return tipus;
	}

	public void setTipus(TipusEnum tipus) {
		this.tipus = tipus;
	}

	public Domini url(String url) {
		this.url = url;
		return this;
	}

	/**
	 * Get url
	 * 
	 * @return url
	 **/
	// @Schema(example = "http://example.com/nom_domini", description = "")
	public String getUrl() {
		return url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	public Domini tipusAuth(TipusAuthEnum tipusAuth) {
		this.tipusAuth = tipusAuth;
		return this;
	}

	/**
	 * Get tipusAuth
	 * 
	 * @return tipusAuth
	 **/
	// @Schema(example = "HTTP_BASIC", description = "")
	public TipusAuthEnum getTipusAuth() {
		return tipusAuth;
	}

	public void setTipusAuth(TipusAuthEnum tipusAuth) {
		this.tipusAuth = tipusAuth;
	}

	public Domini origenCredencials(OrigenCredencialsEnum origenCredencials) {
		this.origenCredencials = origenCredencials;
		return this;
	}

	/**
	 * Get origenCredencials
	 * 
	 * @return origenCredencials
	 **/
	// @Schema(example = "PROPERTIES", description = "")
	public OrigenCredencialsEnum getOrigenCredencials() {
		return origenCredencials;
	}

	public void setOrigenCredencials(OrigenCredencialsEnum origenCredencials) {
		this.origenCredencials = origenCredencials;
	}

	public Domini usuari(String usuari) {
		this.usuari = usuari;
		return this;
	}

	/**
	 * Get usuari
	 * 
	 * @return usuari
	 **/
	// @Schema(example = "codi_usuari", description = "")
	public String getUsuari() {
		return usuari;
	}

	public void setUsuari(String usuari) {
		this.usuari = usuari;
	}

	public Domini contrasenya(String contrasenya) {
		this.contrasenya = contrasenya;
		return this;
	}

	/**
	 * Get contrasenya
	 * 
	 * @return contrasenya
	 **/
	// @Schema(example = "password", description = "")
	public String getContrasenya() {
		return contrasenya;
	}

	public void setContrasenya(String contrasenya) {
		this.contrasenya = contrasenya;
	}

	public Domini sql(String sql) {
		this.sql = sql;
		return this;
	}

	/**
	 * Get sql
	 * 
	 * @return sql
	 **/
	// @Schema(example = "select camp_1, camp_2, camp_3 from taula where camp_4
	// = :parametre", description = "")
	public String getSql() {
		return sql;
	}

	public void setSql(String sql) {
		this.sql = sql;
	}

	public Domini jndiDatasource(String jndiDatasource) {
		this.jndiDatasource = jndiDatasource;
		return this;
	}

	/**
	 * Get jndiDatasource
	 * 
	 * @return jndiDatasource
	 **/
	// @Schema(example = "java:/es.caib.example.db", description = "")
	public String getJndiDatasource() {
		return jndiDatasource;
	}

	public void setJndiDatasource(String jndiDatasource) {
		this.jndiDatasource = jndiDatasource;
	}

	public Domini descripcio(String descripcio) {
		this.descripcio = descripcio;
		return this;
	}

	/**
	 * Get descripcio
	 * 
	 * @return descripcio
	 **/
	// @Schema(example = "Text descriptiu del domini", description = "")
	public String getDescripcio() {
		return descripcio;
	}

	public void setDescripcio(String descripcio) {
		this.descripcio = descripcio;
	}

	public Domini cacheSegons(Integer cacheSegons) {
		this.cacheSegons = cacheSegons;
		return this;
	}

	/**
	 * En cas de posar el valor 0 ???
	 * 
	 * @return cacheSegons
	 **/
	// @Schema(description = "En cas de posar el valor 0 ???")
	public Integer getCacheSegons() {
		return cacheSegons;
	}

	public void setCacheSegons(Integer cacheSegons) {
		this.cacheSegons = cacheSegons;
	}

	public Domini timeout(Integer timeout) {
		this.timeout = timeout;
		return this;
	}

	/**
	 * En cas de posar el valor 0 ???
	 * 
	 * @return timeout
	 **/
	// @Schema(description = "En cas de posar el valor 0 ???")
	public Integer getTimeout() {
		return timeout;
	}

	public void setTimeout(Integer timeout) {
		this.timeout = timeout;
	}

	public Domini ordreParams(String ordreParams) {
		this.ordreParams = ordreParams;
		return this;
	}

	/**
	 * Get ordreParams
	 * 
	 * @return ordreParams
	 **/
	// @Schema(description = "")
	public String getOrdreParams() {
		return ordreParams;
	}

	public void setOrdreParams(String ordreParams) {
		this.ordreParams = ordreParams;
	}

	public Domini entornId(Long entornId) {
		this.entornId = entornId;
		return this;
	}

	/**
	 * Identificador de l&#x27;entornId al que pertany el domini
	 * 
	 * @return entornId
	 **/
	public Long getEntornId() {
		return entornId;
	}

	public void setEntornId(Long entornId) {
		this.entornId = entornId;
	}

	public Domini expedientTipus(Long expedientTipusId) {
		this.expedientTipusId = expedientTipusId;
		return this;
	}

	/**
	 * Identificador del tipus d&#x27;expedient al que pertany el domini. Si el
	 * domini és global aquest identificador serà null.
	 * 
	 * @return expedientTipus
	 **/
	public Long getExpedientTipusId() {
		return expedientTipusId;
	}

	public void setExpedientTipusId(Long expedientTipusId) {
		this.expedientTipusId = expedientTipusId;
	}

	public boolean isHeretat() {
		return heretat;
	}

	public void setHeretat(boolean heretat) {
		this.heretat = heretat;
	}

	public boolean isSobreescriu() {
		return sobreescriu;
	}

	public void setSobreescriu(boolean sobreescriu) {
		this.sobreescriu = sobreescriu;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		Domini domini = (Domini) o;
		return Objects.equals(this.id, domini.id) && Objects.equals(this.codi, domini.codi)
				&& Objects.equals(this.nom, domini.nom) && Objects.equals(this.tipus, domini.tipus)
				&& Objects.equals(this.url, domini.url) && Objects.equals(this.tipusAuth, domini.tipusAuth)
				&& Objects.equals(this.origenCredencials, domini.origenCredencials)
				&& Objects.equals(this.usuari, domini.usuari) && Objects.equals(this.contrasenya, domini.contrasenya)
				&& Objects.equals(this.sql, domini.sql) && Objects.equals(this.jndiDatasource, domini.jndiDatasource)
				&& Objects.equals(this.descripcio, domini.descripcio)
				&& Objects.equals(this.cacheSegons, domini.cacheSegons) && Objects.equals(this.timeout, domini.timeout)
				&& Objects.equals(this.ordreParams, domini.ordreParams) && Objects.equals(this.entornId, domini.entornId)
				&& Objects.equals(this.expedientTipusId, domini.expedientTipusId);
	}

	@Override
	public int hashCode() {
		return Objects.hash(id, codi, nom, tipus, url, tipusAuth, origenCredencials, usuari, contrasenya, sql,
				jndiDatasource, descripcio, cacheSegons, timeout, ordreParams, entornId, expedientTipusId);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class Domini {\n");

		sb.append("    id: ").append(toIndentedString(id)).append("\n");
		sb.append("    codi: ").append(toIndentedString(codi)).append("\n");
		sb.append("    nom: ").append(toIndentedString(nom)).append("\n");
		sb.append("    tipus: ").append(toIndentedString(tipus)).append("\n");
		sb.append("    url: ").append(toIndentedString(url)).append("\n");
		sb.append("    tipusAuth: ").append(toIndentedString(tipusAuth)).append("\n");
		sb.append("    origenCredencials: ").append(toIndentedString(origenCredencials)).append("\n");
		sb.append("    usuari: ").append(toIndentedString(usuari)).append("\n");
		sb.append("    contrasenya: ").append(toIndentedString(contrasenya)).append("\n");
		sb.append("    sql: ").append(toIndentedString(sql)).append("\n");
		sb.append("    jndiDatasource: ").append(toIndentedString(jndiDatasource)).append("\n");
		sb.append("    descripcio: ").append(toIndentedString(descripcio)).append("\n");
		sb.append("    cacheSegons: ").append(toIndentedString(cacheSegons)).append("\n");
		sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
		sb.append("    ordreParams: ").append(toIndentedString(ordreParams)).append("\n");
		sb.append("    entornId: ").append(toIndentedString(entornId)).append("\n");
		sb.append("    expedientTipus: ").append(toIndentedString(expedientTipusId)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}
