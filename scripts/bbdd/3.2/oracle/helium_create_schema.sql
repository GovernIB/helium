CREATE TABLE HEL_ACCIO
(
  ID                   NUMBER(19)               NOT NULL,
  CODI                 VARCHAR2(64 CHAR)        NOT NULL,
  CRON                 VARCHAR2(255 CHAR),
  DESCRIPCIO           VARCHAR2(255 CHAR),
  JBPM_ACTION          VARCHAR2(255 CHAR)       NOT NULL,
  NOM                  VARCHAR2(255 CHAR)       NOT NULL,
  OCULTA               NUMBER(1),
  PUBLICA              NUMBER(1),
  DEFINICIO_PROCES_ID  NUMBER(19),
  EXPEDIENT_TIPUS_ID   NUMBER(19),
  DEFPROC_JBPMKEY	   VARCHAR2(255 CHAR),
  ROLS                 VARCHAR2(512 CHAR)
);


CREATE TABLE HEL_ACL_CLASS
(
  ID     NUMBER(19)                             NOT NULL,
  CLASS  VARCHAR2(255 CHAR)                     NOT NULL
);

CREATE TABLE HEL_ACL_ENTRY
(
  ID                   NUMBER(19)               NOT NULL,
  ACE_ORDER            NUMBER(10)               NOT NULL,
  AUDIT_FAILURE        NUMBER(1)                NOT NULL,
  AUDIT_SUCCESS        NUMBER(1)                NOT NULL,
  GRANTING             NUMBER(1)                NOT NULL,
  MASK                 NUMBER(10)               NOT NULL,
  ACL_OBJECT_IDENTITY  NUMBER(19),
  SID                  NUMBER(19)
);


CREATE TABLE HEL_ACL_OBJECT_IDENTITY
(
  ID                  NUMBER(19)                NOT NULL,
  ENTRIES_INHERITING  NUMBER(1)                 NOT NULL,
  OBJECT_ID_IDENTITY  NUMBER(19)                NOT NULL,
  OBJECT_ID_CLASS     NUMBER(19),
  OWNER_SID           NUMBER(19),
  PARENT_OBJECT       NUMBER(19)
);


CREATE TABLE HEL_ACL_SID
(
  ID         NUMBER(19)                         NOT NULL,
  PRINCIPAL  NUMBER(1),
  SID        VARCHAR2(100 CHAR)                 NOT NULL
);


CREATE TABLE HEL_ACTION_LOG
(
  ID          NUMBER(19)                        NOT NULL,
  ACCIO       VARCHAR2(255 CHAR)                NOT NULL,
  COLUMNA_PK  VARCHAR2(255 CHAR)                NOT NULL,
  DATA        TIMESTAMP(6)                      NOT NULL,
  TAULA       VARCHAR2(255 CHAR)                NOT NULL,
  USUARI      VARCHAR2(255 CHAR)                NOT NULL,
  VALORS      VARCHAR2(255 CHAR)                NOT NULL
);


CREATE TABLE HEL_ALERTA
(
  ID                  NUMBER(19)                NOT NULL,
  CAUSA               VARCHAR2(255 CHAR),
  DATA_CREACIO        TIMESTAMP(6)              NOT NULL,
  DATA_ELIMINACIO     TIMESTAMP(6),
  DATA_LECTURA        TIMESTAMP(6),
  DESTINATARI         VARCHAR2(255 CHAR)        NOT NULL,
  PRIORITAT           NUMBER(10),
  TEXT                VARCHAR2(1024 CHAR),
  ENTORN_ID           NUMBER(19)                NOT NULL,
  EXPEDIENT_ID        NUMBER(19)                NOT NULL,
  TERMINI_INICIAT_ID  NUMBER(19)
);


CREATE TABLE HEL_AREA
(
  ID          NUMBER(19)                        NOT NULL,
  CODI        VARCHAR2(64 CHAR)                 NOT NULL,
  DESCRIPCIO  VARCHAR2(255 CHAR),
  NOM         VARCHAR2(255 CHAR)                NOT NULL,
  ENTORN_ID   NUMBER(19)                        NOT NULL,
  PARE_ID     NUMBER(19),
  TIPUS_ID    NUMBER(19)                        NOT NULL
);


CREATE TABLE HEL_AREA_JBPMID
(
  ID          NUMBER(19)                        NOT NULL,
  CODI        VARCHAR2(64 CHAR)                 NOT NULL,
  DESCRIPCIO  VARCHAR2(255 CHAR),
  NOM         VARCHAR2(255 CHAR)                NOT NULL
);


CREATE TABLE HEL_AREA_MEMBRE
(
  ID       NUMBER(19)                           NOT NULL,
  CODI     VARCHAR2(64 CHAR)                    NOT NULL,
  AREA_ID  NUMBER(19)                           NOT NULL
);


CREATE TABLE HEL_AREA_TIPUS
(
  ID          NUMBER(19)                        NOT NULL,
  CODI        VARCHAR2(64 CHAR)                 NOT NULL,
  DESCRIPCIO  VARCHAR2(255 CHAR),
  NOM         VARCHAR2(255 CHAR)                NOT NULL,
  ENTORN_ID   NUMBER(19)                        NOT NULL
);


CREATE TABLE HEL_CAMP
(
  ID                   NUMBER(19)               NOT NULL,
  CODI                 VARCHAR2(64 CHAR)        NOT NULL,
  DOMINI_CACHE_TEXT    NUMBER(1),
  DOMINI_CAMP_TEXT     VARCHAR2(64 CHAR),
  DOMINI_CAMP_VALOR    VARCHAR2(64 CHAR),
  DOMINI_PARAMID       VARCHAR2(255 CHAR),
  DOMINI_PARAMS        VARCHAR2(255 CHAR),
  DOMINI_INTERN        NUMBER(1),
  ETIQUETA             VARCHAR2(255 CHAR)       NOT NULL,
  JBPM_ACTION          VARCHAR2(255 CHAR),
  MULTIPLE             NUMBER(1),
  OBSERVACIONS         VARCHAR2(255 CHAR),
  OCULT                NUMBER(1),
  IGNORED              NUMBER(1),
  ORDRE                NUMBER(10),
  TIPUS                NUMBER(10)               NOT NULL,
  CAMP_AGRUPACIO_ID    NUMBER(19),
  DEFINICIO_PROCES_ID  NUMBER(19),
  EXPEDIENT_TIPUS_ID   NUMBER(19),
  DOMINI_ID            NUMBER(19),
  ENUMERACIO_ID        NUMBER(19),
  CONSULTA_ID          NUMBER(19),
  CONSULTA_CAMP_TEXT   VARCHAR2(64 CHAR),
  CONSULTA_CAMP_VALOR  VARCHAR2(64 CHAR),
  CONSULTA_PARAMS      VARCHAR2(255 CHAR),
  DEFPROC_JBPMKEY	   VARCHAR2(255 CHAR)
);


CREATE TABLE HEL_CAMP_AGRUP
(
  ID                   NUMBER(19)               NOT NULL,
  CODI                 VARCHAR2(64 CHAR)        NOT NULL,
  DESCRIPCIO           VARCHAR2(255 CHAR),
  NOM                  VARCHAR2(255 CHAR)       NOT NULL,
  ORDRE                NUMBER(10),
  DEFINICIO_PROCES_ID  NUMBER(19),
  EXPEDIENT_TIPUS_ID   NUMBER(19)
);


CREATE TABLE HEL_CAMP_REGISTRE
(
  ID           NUMBER(19)                       NOT NULL,
  LLISTAR      NUMBER(1),
  OBLIGATORI   NUMBER(1),
  ORDRE        NUMBER(10),
  MEMBRE_ID    NUMBER(19)                       NOT NULL,
  REGISTRE_ID  NUMBER(19)                       NOT NULL
);


CREATE TABLE HEL_CAMP_TASCA
(
  ID        	NUMBER(19)                          NOT NULL,
  ORDRE     	NUMBER(10),
  RF        	NUMBER(1),
  RO        	NUMBER(1),
  RQ        	NUMBER(1),
  WT        	NUMBER(1),
  CAMP_ID   	NUMBER(19)                          NOT NULL,
  TASCA_ID  	NUMBER(19)                          NOT NULL,
  AMPLE_COLS 	NUMBER(10) 		DEFAULT 12,
  BUIT_COLS 	NUMBER(10) 		DEFAULT 0,
  EXPEDIENT_TIPUS_ID NUMBER (19)
);


CREATE TABLE HEL_CARREC
(
  ID               NUMBER(19)                   NOT NULL,
  CODI             VARCHAR2(64 CHAR)            NOT NULL,
  DESCRIPCIO       VARCHAR2(255 CHAR),
  NOM_DONA         VARCHAR2(255 CHAR)           NOT NULL,
  NOM_HOME         VARCHAR2(255 CHAR)           NOT NULL,
  PERSONA_CODI     VARCHAR2(64 CHAR),
  PERSONA_SEXE     NUMBER(10),
  CARREC_DONA      VARCHAR2(255 CHAR)           NOT NULL,
  TRACTAMENT_HOME  VARCHAR2(255 CHAR)           NOT NULL,
  AREA_ID          NUMBER(19)                   NOT NULL,
  ENTORN_ID        NUMBER(19)                   NOT NULL
);


CREATE TABLE HEL_CARREC_JBPMID
(
  ID               NUMBER(19)                   NOT NULL,
  CODI             VARCHAR2(64 CHAR)            NOT NULL,
  DESCRIPCIO       VARCHAR2(255 CHAR),
  GRUP             VARCHAR2(64 CHAR)            NOT NULL,
  NOM_DONA         VARCHAR2(255 CHAR)           NOT NULL,
  NOM_HOME         VARCHAR2(255 CHAR)           NOT NULL,
  PERSONA_SEXE     NUMBER(10),
  CARREC_DONA      VARCHAR2(255 CHAR)           NOT NULL,
  TRACTAMENT_HOME  VARCHAR2(255 CHAR)           NOT NULL
);


CREATE TABLE HEL_CONSULTA
(
  ID                  NUMBER(19)                NOT NULL,
  CODI                VARCHAR2(64 CHAR)         NOT NULL,
  DESCRIPCIO          VARCHAR2(255 CHAR),
  EXPORTAR_ACTIU      NUMBER(1),
  OCULTAR_ACTIU       NUMBER(1),
  FORMAT_EXPORTACIO   VARCHAR2(16),
  GENERICA            NUMBER(1),
  INFORME_CONTINGUT   BLOB,
  INFORME_NOM         VARCHAR2(255 CHAR),
  NOM                 VARCHAR2(255 CHAR)        NOT NULL,
  ORDRE               NUMBER(10)                NOT NULL,
  VALORS_PREDEF       VARCHAR2(1024 CHAR),
  ENTORN_ID           NUMBER(19)                NOT NULL,
  EXPEDIENT_TIPUS_ID  NUMBER(19)                NOT NULL
);


CREATE TABLE HEL_CONSULTA_CAMP
(
  ID               NUMBER(19)                   NOT NULL,
  CAMP_CODI        VARCHAR2(64 CHAR)            NOT NULL,
  DEFPROC_JBPMKEY  VARCHAR2(255 CHAR),
  DEFPROC_VERSIO   NUMBER(10),
  ORDRE            NUMBER(10)                   NOT NULL,
  TIPUS            NUMBER(10)                   NOT NULL,
  CONSULTA_ID      NUMBER(19)                   NOT NULL,
  CAMP_DESCRIPCIO  VARCHAR2(255 CHAR),
  PARAM_TIPUS 	   NUMBER(10),
  AMPLE_COLS 	   NUMBER(10) 	DEFAULT 12,
  BUIT_COLS 	   NUMBER(10) 	DEFAULT 0
);


CREATE TABLE HEL_CONSULTA_SUB
(
  PARE_ID  NUMBER(19)                           NOT NULL,
  FILL_ID  NUMBER(19)                           NOT NULL
);


CREATE TABLE HEL_DEFINICIO_PROCES
(
  ID                  NUMBER(19)                NOT NULL,
  DATACREACIO         TIMESTAMP(6)              NOT NULL,
  ETIQUETA            VARCHAR2(64 CHAR),
  JBPM_ID             VARCHAR2(255 CHAR)        NOT NULL,
  JBPM_KEY            VARCHAR2(255 CHAR)        NOT NULL,
  VERSIO              NUMBER(10),
  ENTORN_ID           NUMBER(19)                NOT NULL,
  EXPEDIENT_TIPUS_ID  NUMBER(19)
);


CREATE TABLE HEL_DOCUMENT
(
  ID                     NUMBER(19)             NOT NULL,
  ADJUNTAR_AUTO          NUMBER(1),
  ARXIU_CONTINGUT        BLOB,
  ARXIU_NOM              VARCHAR2(255 CHAR),
  CODI                   VARCHAR2(64 CHAR)      NOT NULL,
  CONTENT_TYPE           VARCHAR2(255 CHAR),
  CONVERTIR_EXT          VARCHAR2(10 CHAR),
  CUSTODIA_CODI          VARCHAR2(255 CHAR),
  DESCRIPCIO             VARCHAR2(255 CHAR),
  EXTENSIONS_PERMESES    VARCHAR2(255 CHAR),
  NOM                    VARCHAR2(255 CHAR)     NOT NULL,
  PLANTILLA              NUMBER(1),
  NOTIFICABLE 			 NUMBER(1) DEFAULT 0,
  TIPUS_PORTASIGNATURES  NUMBER(10),
  CAMP_DATA_ID           NUMBER(19),
  DEFINICIO_PROCES_ID    NUMBER(19),
  EXPEDIENT_TIPUS_ID     NUMBER(19),
  IGNORED                NUMBER(1),
  NTI_ORIGEN             NUMBER(10),
  NTI_ESTADO_ELAB        NUMBER(10),
  NTI_TIPO_DOC           NUMBER(10)
);

CREATE TABLE HEL_DOCUMENT_NOTIFICACIO (  
  ID                   	NUMBER(19)			NOT NULL,
  USUARI_CODI			VARCHAR2(255),
  EXPEDIENT_ID         	NUMBER(19)			NOT NULL,
  DOCUMENT_STORE_ID    	NUMBER(19)			NOT NULL,
  CERTIFICACIO_STORE_ID	NUMBER(19),
  EMISOR				VARCHAR2(10),
  TIPUS                	VARCHAR2(255),
  DATA_PROGRAMADA      	TIMESTAMP(6),
  RETARD				NUMBER(10),
  DATA_CADUCITAT      	TIMESTAMP(6),
  TIT_NOM           	VARCHAR2(100),
  TIT_LLINATGE1        	VARCHAR2(100),
  TIT_LLINATGE2        	VARCHAR2(100),
  TIT_NIF        		VARCHAR2(100),
  TIT_TELEFON        	VARCHAR2(16),
  TIT_EMAIL         	VARCHAR2(160),
  DEST_NOM           	VARCHAR2(100),
  DEST_LLINATGE1       	VARCHAR2(100),
  DEST_LLINATGE2       	VARCHAR2(100),
  DEST_NIF        		VARCHAR2(100),
  DEST_TELEFON        	VARCHAR2(16),
  DEST_EMAIL         	VARCHAR2(160),
  IDIOMA               	VARCHAR2(32),
  AVIS_TITOL           	VARCHAR2(256),
  AVIS_TEXT            	VARCHAR2(1024),
  AVIS_TEXT_MOBIL      	VARCHAR2(256),
  OFICI_TITOL          	VARCHAR2(256),
  OFICI_TEXT           	VARCHAR2(1024),
  ENV_ID           		VARCHAR2(100),
  ENV_REF           	VARCHAR2(100),
  ENV_DAT_ESTAT        	VARCHAR2(20),
  ENV_DAT_DATA        	TIMESTAMP(6),
  ENV_DAT_ORIGEN       	VARCHAR2(20),
  ENV_CERT_DATA        	TIMESTAMP(6),
  ENV_CERT_ORIGEN      	VARCHAR2(20),
  ENV_CERT_ARXIUUID		VARCHAR2(50),
  ESTAT                	VARCHAR2(20)		NOT NULL,
  ENVIAT_DATA       	TIMESTAMP(6),
  PROCESSAT_DATA       	TIMESTAMP(6),
  CANCELAT_DATA       	TIMESTAMP(6),
  ERROR         		NUMBER(1),
  ERROR_DESCRIPCIO		VARCHAR2(2048),
  INTENT_NUM			NUMBER(10),
  INTENT_DATA          	TIMESTAMP(6),
  INTENT_PROXIM_DATA	TIMESTAMP(6),
  ENVIAMENT_TIPUS		VARCHAR2(255),
  CONCEPTE				VARCHAR2(256)		NOT NULL,
  DESCRIPCIO			VARCHAR2(256)
);

CREATE TABLE HEL_DOCUMENT_NOTIFICACIO_ANX (
  DOCUMENT_NOTIFICACIO_ID NUMBER(19)	NOT NULL,
  DOCUMENT_STORE_ID NUMBER(19)			NOT NULL
);


CREATE TABLE HEL_DOCUMENT_STORE
(
  ID                   NUMBER(19)               NOT NULL,
  ADJUNT               NUMBER(1),
  ADJUNT_TITOL         VARCHAR2(255 CHAR),
  ARXIU_CONTINGUT      BLOB,
  ARXIU_NOM            VARCHAR2(255 CHAR)       NOT NULL,
  DATA_CREACIO         TIMESTAMP(6)             NOT NULL,
  DATA_DOCUMENT        DATE                     NOT NULL,
  DATA_MODIFICACIO     TIMESTAMP(6)             NOT NULL,
  FONT                 NUMBER(10)               NOT NULL,
  JBPM_VARIABLE        VARCHAR2(255 CHAR)       NOT NULL,
  PROCESS_INSTANCE_ID  VARCHAR2(64 CHAR)        NOT NULL,
  REF_CUSTODIA         VARCHAR2(255 CHAR),
  REF_FONT             VARCHAR2(255 CHAR),
  REGISTRE_DATA        TIMESTAMP(6),
  REGISTRE_ENTRADA     NUMBER(1),
  REGISTRE_NUM         VARCHAR2(255 CHAR),
  REGISTRE_OFCODI      VARCHAR2(255 CHAR),
  REGISTRE_OFNOM       VARCHAR2(255 CHAR),
  REGISTRE_ORGCODI     VARCHAR2(255 CHAR),
  SIGNAT               NUMBER(1),
  NTI_VERSION          VARCHAR2(256),
  NTI_IDENTIFICADOR    VARCHAR2(52),
  NTI_ORGANO           VARCHAR2(256),
  NTI_ORIGEN           NUMBER(10),
  NTI_ESTADO_ELAB      NUMBER(10),
  NTI_NOMBRE_FMT       NUMBER(10),
  NTI_TIPO_DOC         NUMBER(10),
  NTI_IDDOC_ORIG       VARCHAR2(52),
  NTI_TIPO_FIRMA       NUMBER(10),
  NTI_CSV              VARCHAR2(256),
  NTI_DEF_GEN_CSV      VARCHAR2(256),
  ARXIU_UUID           VARCHAR2(36)
);


CREATE TABLE HEL_DOCUMENT_TASCA
(
  ID           NUMBER(19)                       NOT NULL,
  ORDRE        NUMBER(10),
  RO           NUMBER(1),
  RQ           NUMBER(1),
  DOCUMENT_ID  NUMBER(19)                       NOT NULL,
  TASCA_ID     NUMBER(19)                       NOT NULL,
  EXPEDIENT_TIPUS_ID NUMBER (19)
);


CREATE TABLE HEL_DOMINI
(
  ID                  NUMBER(19)                NOT NULL,
  CACHE_SEGONS        NUMBER(10),
  TIMEOUT        	  NUMBER(10),
  CODI                VARCHAR2(64 CHAR)         NOT NULL,
  CONTRASENYA         VARCHAR2(255 CHAR),
  DESCRIPCIO          VARCHAR2(255 CHAR),
  JNDI_DATASOURCE     VARCHAR2(255 CHAR),
  NOM                 VARCHAR2(255 CHAR)        NOT NULL,
  ORDRE_PARAMS        VARCHAR2(255 CHAR),
  ORIGEN_CREDS        NUMBER(10),
  SQLEXPR             VARCHAR2(1024 CHAR),
  TIPUS               NUMBER(10)                NOT NULL,
  TIPUS_AUTH          NUMBER(10),
  URL                 VARCHAR2(255 CHAR),
  USUARI              VARCHAR2(255 CHAR),
  ENTORN_ID           NUMBER(19)                NOT NULL,
  EXPEDIENT_TIPUS_ID  NUMBER(19)
);


CREATE TABLE HEL_ENTORN
(
  ID          NUMBER(19)                        NOT NULL,
  ACTIU       NUMBER(1),
  CODI        VARCHAR2(64 CHAR)                 NOT NULL,
  DESCRIPCIO  VARCHAR2(255 CHAR),
  NOM         VARCHAR2(255 CHAR)                NOT NULL
);


CREATE TABLE HEL_ENUMERACIO
(
  ID                  NUMBER(19)                NOT NULL,
  CODI                VARCHAR2(64 CHAR)         NOT NULL,
  NOM                 VARCHAR2(255 CHAR)        NOT NULL,
  VALORS              VARCHAR2(4000 CHAR),
  ENTORN_ID           NUMBER(19)                NOT NULL,
  EXPEDIENT_TIPUS_ID  NUMBER(19)
);


CREATE TABLE HEL_ENUMERACIO_VALORS
(
  ID             NUMBER(19)                     NOT NULL,
  CODI           VARCHAR2(64 CHAR)              NOT NULL,
  NOM            VARCHAR2(255 CHAR)             NOT NULL,
  ORDRE          NUMBER(10)                     NOT NULL,
  ENUMERACIO_ID  NUMBER(19)                     NOT NULL
);


CREATE TABLE HEL_ESTAT
(
  ID                  NUMBER(19)                NOT NULL,
  CODI                VARCHAR2(64 CHAR)         NOT NULL,
  NOM                 VARCHAR2(255 CHAR)        NOT NULL,
  ORDRE               NUMBER(10)                NOT NULL,
  EXPEDIENT_TIPUS_ID  NUMBER(19)                NOT NULL
);


CREATE TABLE HEL_EXPEDIENT
(
  ID                   NUMBER(19)               NOT NULL,
  ANULAT               NUMBER(1),
  AUTENTICAT           NUMBER(1),
  AVISOS_EMAIL         VARCHAR2(255 CHAR),
  AVISOS_HABILITAT     NUMBER(1),
  AVISOS_MOBIL         VARCHAR2(255 CHAR),
  COMENTARI            VARCHAR2(255 CHAR),
  COMENTARIANULAT	   VARCHAR2(255 CHAR),
  DATA_FI              TIMESTAMP(6),
  DATA_INICI           TIMESTAMP(6)             NOT NULL,
  ERROR_FULL2		   CLOB,
  ERROR_FULL		   CLOB,
  ERROR_DESC		   VARCHAR2(255 CHAR),
  ERRORS_INTEGS 	   NUMBER(1),
  GEO_POSX             FLOAT(126),
  GEO_POSY             FLOAT(126),
  GEO_REFERENCIA       VARCHAR2(64 CHAR),
  IDIOMA               VARCHAR2(8 CHAR),
  INFO_ATURAT          VARCHAR2(1024 CHAR),
  INICIADOR_CODI       VARCHAR2(64 CHAR),
  INICIADOR_TIPUS      NUMBER(10),
  INTERESSAT_NIF       VARCHAR2(16 CHAR),
  INTERESSAT_NOM       VARCHAR2(255 CHAR),
  NOTTEL_HABILITAT     NUMBER(1),
  NUMERO               VARCHAR2(64 CHAR),
  NUMERO_DEFAULT       VARCHAR2(64 CHAR),
  PROCESS_INSTANCE_ID  VARCHAR2(255 CHAR)       NOT NULL,
  REGISTRE_DATA        TIMESTAMP(6),
  REGISTRE_NUM         VARCHAR2(64 CHAR),
  REPRESENTANT_NIF     VARCHAR2(16 CHAR),
  REPRESENTANT_NOM     VARCHAR2(255 CHAR),
  RESPONSABLE_CODI     VARCHAR2(64 CHAR),
  TITOL                VARCHAR2(255 CHAR),
  TRAMEXP_CLAU         VARCHAR2(255 CHAR),
  TRAMEXP_ID           VARCHAR2(255 CHAR),
  TRAMITADOR_NIF       VARCHAR2(16 CHAR),
  TRAMITADOR_NOM       VARCHAR2(255 CHAR),
  GRUP_CODI            VARCHAR2(64 CHAR),
  UNITAT_ADM           NUMBER(19),
  ENTORN_ID            NUMBER(19)               NOT NULL,
  ESTAT_ID             NUMBER(19),
  TIPUS_ID             NUMBER(19)               NOT NULL,
  AMB_RETROACCIO       NUMBER(1)	DEFAULT 1	NOT NULL,
  REINDEXAR_DATA	   TIMESTAMP(6),
  REINDEXAR_ERROR      NUMBER(1) DEFAULT 0      NOT NULL,
  NTI_ACTIU            NUMBER(1) DEFAULT 0,
  NTI_VERSION          VARCHAR2(256),
  NTI_IDENTIFICADOR    VARCHAR2(52),
  NTI_ORGANO           VARCHAR2(256),
  NTI_SERIEDOCUMENTAL  VARCHAR2(16),
  NTI_CLASIFICACION    VARCHAR2(44),
  NTI_TIPO_FIRMA       NUMBER(10),
  NTI_CSV              VARCHAR2(256),
  NTI_DEF_GEN_CSV      VARCHAR2(256),
  ARXIU_ACTIU          NUMBER(1) DEFAULT 0,
  ARXIU_UUID           VARCHAR2(36)
);


CREATE TABLE HEL_INTERESSAT
(
	ID					NUMBER(19)               NOT NULL,
	CODI                VARCHAR2(64 CHAR)        NOT NULL,
	NIF					VARCHAR2(16 CHAR)		 NOT NULL,
	NOM					VARCHAR2(255 CHAR) 		 NOT NULL,
	LLINATGE1			VARCHAR2(255 CHAR),
	LLINATGE2			VARCHAR2(255 CHAR),
	TIPUS				VARCHAR2(40 CHAR),
	EMAIL				VARCHAR2(255 CHAR),
	TELEFON				VARCHAR2(16 CHAR),
	EXPEDIENT_ID  		NUMBER(19)
);


CREATE TABLE HEL_EXEC_MASEXP (
	ID NUMBER(19) NOT NULL, 
	DATA_FI DATE, 
	DATA_INICI DATE, 
	ORDRE NUMBER(10) NOT NULL, 
	EXECMAS_ID NUMBER(19) NOT NULL, 
	EXPEDIENT_ID NUMBER(19), 
	ESTAT NUMBER(10), 
	ERROR CLOB, 
	TASCA_ID VARCHAR2(255 CHAR), 
	PROCINST_ID VARCHAR2(255 CHAR),
	AUX_TEXT VARCHAR2(255 CHAR),
    DEFPROC_ID NUMBER(19)
);

CREATE TABLE HEL_EXEC_MASSIVA (
	ID NUMBER(19) NOT NULL, 
	DATA_FI DATE, 
	DATA_INICI DATE NOT NULL, 
	PARAM1 VARCHAR2(255), 
	TIPUS NUMBER(10) NOT NULL, 
	USUARI VARCHAR2(64) NOT NULL, 
	EXPEDIENT_TIPUS_ID NUMBER(19), 
	ENV_CORREU NUMBER(1), 
	PARAM2 BLOB, 
	ENTORN NUMBER(19), 
	ROLS VARCHAR2(2000 CHAR), 
	CREDENCIALS RAW(2000)
);

CREATE TABLE HEL_EXPEDIENT_NOTIF_ELECTR (
  ID 					NUMBER 			NOT NULL ,
  DATA 					TIMESTAMP(0) 	NOT NULL ,
  EXPEDIENT_ID 			NUMBER 			NOT NULL ,
  NUMERO 				VARCHAR2(255) 	NOT NULL ,
  RDS_CODI 				VARCHAR2(255) 	NOT NULL ,
  RDS_CLAVE 			VARCHAR2(255) 	NOT NULL 
);

CREATE TABLE HEL_EXPEDIENT_LOG(
  ID                   NUMBER(19)               NOT NULL,
  ACCIO_TIPUS          NUMBER(10)               NOT NULL,
  ACCIO_PARAMS         VARCHAR2(2048 CHAR),
  DATA                 TIMESTAMP(6)             NOT NULL,
  ESTAT                NUMBER(10)               NOT NULL,
  INI_RETROCES         NUMBER(19),
  JBPM_LOGID           NUMBER(19),
  PROCESS_INSTANCE_ID  NUMBER(19),
  TARGET_ID            VARCHAR2(255 CHAR)       NOT NULL,
  USUARI               VARCHAR2(255 CHAR)       NOT NULL,
  EXPEDIENT_ID         NUMBER(19)               NOT NULL
);

CREATE TABLE HEL_EXPEDIENT_RELS
(
  ORIGEN_ID  NUMBER(19)                         NOT NULL,
  DESTI_ID   NUMBER(19)                         NOT NULL
);


CREATE TABLE HEL_EXPEDIENT_TIPUS
(
  ID                   NUMBER(19)               NOT NULL,
  ANY_ACTUAL           NUMBER(10),
  CODI                 VARCHAR2(64 CHAR)        NOT NULL,
  DEMANA_NUMERO        NUMBER(1),
  DEMANA_TITOL         NUMBER(1),
  EXPRESSIO_NUMERO     VARCHAR2(255 CHAR),
  FORMEXT_CONTRASENYA  VARCHAR2(255 CHAR),
  FORMEXT_URL          VARCHAR2(255 CHAR),
  FORMEXT_USUARI       VARCHAR2(255 CHAR),
  JBPM_PD_KEY          VARCHAR2(255 CHAR),
  NOM                  VARCHAR2(255 CHAR)       NOT NULL,
  REINICIAR_ANUAL      NUMBER(1),
  RESPDEFAULT_CODI     VARCHAR2(64 CHAR),
  SEQUENCIA            NUMBER(19),
  SEQUENCIA_DEF        NUMBER(19),
  SISTRA_CODTRA        VARCHAR2(64 CHAR),
  SISTRA_MAPADJ        VARCHAR2(2048 CHAR),
  SISTRA_MAPCAMPS      VARCHAR2(2048 CHAR),
  SISTRA_MAPDOCS       VARCHAR2(2048 CHAR),
  TE_NUMERO            NUMBER(1),
  TE_TITOL             NUMBER(1),
  RESTRINGIR_GRUP      NUMBER(1),
  TRAM_MASSIVA         NUMBER(1),
  ENTORN_ID            NUMBER(19)               NOT NULL,
  AMB_INFO_PROPIA      NUMBER(1) DEFAULT 0		NOT NULL,
  HERETABLE            NUMBER (1) DEFAULT 0,
  EXPEDIENT_TIPUS_PARE_ID	NUMBER (19),
  AMB_RETROACCIO	    NUMBER(1) DEFAULT 0      NOT NULL,
  REINDEXACIO_ASINCRONA NUMBER(1) DEFAULT 0      NOT NULL,
  SELECCIONAR_ANY NUMBER(1) DEFAULT 0      NOT NULL,
  DIES_NO_LABS			VARCHAR2(16),
  NOTIFICACIONS_ACTIVADES	NUMBER(1) DEFAULT 0      NOT NULL,
  NOTIFICACIO_ORGANCODI 	VARCHAR2(100),
  NOTIFICACIO_OFICINACODI 	VARCHAR2(100),
  NOTIFICACIO_UNITATADMIN 	VARCHAR2(100),
  NOTIFICACIO_CODPROC 		VARCHAR2(100),
  NOTIFICACIO_AVISTITOL 	VARCHAR2(256),
  NOTIFICACIO_AVISTEXT 		VARCHAR2(1024),
  NOTIFICACIO_AVISTEXTSMS 	VARCHAR2(200),
  NOTIFICACIO_OFICITITOL 	VARCHAR2(256),
  NOTIFICACIO_OFICITEXT 	VARCHAR2(1024),
  NTI_ACTIU                 NUMBER(1) DEFAULT 0,
  NTI_ORGANO                VARCHAR2(256),
  NTI_CLASIFICACION         VARCHAR2(44),
  NTI_SERIEDOCUMENTAL       VARCHAR2(16),
  ARXIU_ACTIU               NUMBER(1) DEFAULT 0,
  NOTIB_ACTIU 				NUMBER(1) DEFAULT 0,
  NOTIB_SEU_UNITATADMIN 	VARCHAR2(100),
  NOTIB_SEU_OFICINA 		VARCHAR2(100),
  NOTIB_SEU_LLIBRE 			VARCHAR2(100),
  NOTIB_SEU_ORGAN 			VARCHAR2(100),
  NOTIB_SEU_IDIOMA 			VARCHAR2(10),
  NOTIB_AVISTITOL 			VARCHAR2(100),
  NOTIB_AVISTEXT 			VARCHAR2(1024),
  NOTIB_AVISTEXTSMS 		VARCHAR2(200),
  NOTIB_OFICITITOL 			VARCHAR2(256),
  NOTIB_OFICITEXT 			VARCHAR2(1024)
);


CREATE TABLE HEL_EXPEDIENT_TIPUS_SEQANY (
  ID                NUMBER(19) NOT NULL,
  ANY_              NUMBER(10),
  SEQUENCIA         NUMBER(19),
  EXPEDIENT_TIPUS   NUMBER(19)
);


CREATE TABLE HEL_EXPEDIENT_TIPUS_SEQDEFANY
(
  ID                NUMBER(19)                  NOT NULL,
  ANY_              NUMBER(10)                  NOT NULL,
  SEQUENCIADEFAULT  NUMBER(19)                  NOT NULL,
  EXPEDIENT_TIPUS   NUMBER(19)
);


CREATE TABLE HEL_FESTIU
(
  ID    NUMBER(19)                              NOT NULL,
  DATA  DATE                                    NOT NULL
);


CREATE TABLE HEL_FIRMA_TASCA
(
  ID           NUMBER(19)                       NOT NULL,
  ORDRE        NUMBER(10),
  RQ           NUMBER(1),
  DOCUMENT_ID  NUMBER(19)                       NOT NULL,
  TASCA_ID     NUMBER(19)                       NOT NULL,
  EXPEDIENT_TIPUS_ID NUMBER (19)
);


CREATE TABLE HEL_FORMEXT
(
  ID               NUMBER(19)                   NOT NULL,
  DATA_DARRPET     TIMESTAMP(6),
  DATA_INICI       TIMESTAMP(6)                 NOT NULL,
  DATA_RECDADES    TIMESTAMP(6),
  DATA_FORMHEIGHT  NUMBER(10),
  DATA_FORMWIDTH   NUMBER(10),
  FORMID           VARCHAR2(255 CHAR)           NOT NULL,
  TASKID           VARCHAR2(255 CHAR)           NOT NULL,
  URL              VARCHAR2(1024 CHAR)          NOT NULL
);


CREATE TABLE HEL_IDGEN
(
  TAULA  VARCHAR2(255 CHAR),
  VALOR  NUMBER(10)
);


CREATE TABLE HEL_MAP_SISTRA
(
  ID                  NUMBER(19)                NOT NULL,
  CODIHELIUM          VARCHAR2(255 CHAR)        NOT NULL,
  CODISISTRA          VARCHAR2(255 CHAR)        NOT NULL,
  TIPUS               NUMBER(10)                NOT NULL,
  EXPEDIENT_TIPUS_ID  NUMBER(19)                NOT NULL
);


CREATE TABLE HEL_PERMIS
(
  CODI        VARCHAR2(64 CHAR)                 NOT NULL,
  DESCRIPCIO  VARCHAR2(255 CHAR)
);


CREATE TABLE HEL_PERSONA
(
  ID              NUMBER(19)                    NOT NULL,
  AVIS_CORREU     NUMBER(1)                     NOT NULL,
  CODI            VARCHAR2(64 CHAR)             NOT NULL,
  DATA_NAIXEMENT  DATE,
  DNI             VARCHAR2(64 CHAR),
  EMAIL           VARCHAR2(255 CHAR),
  FONT            NUMBER(10),
  LLINATGE1       VARCHAR2(255 CHAR)            NOT NULL,
  LLINATGE2       VARCHAR2(255 CHAR),
  LLINATGES       VARCHAR2(255 CHAR),
  NOM             VARCHAR2(255 CHAR)            NOT NULL,
  NOM_SENCER      VARCHAR2(255 CHAR),
  SEXE            NUMBER(10)                    NOT NULL,
  RELLEU_ID       NUMBER(19)
);


CREATE TABLE HEL_PORTASIGNATURES
(
  ID                   NUMBER(19)                 NOT NULL,
  DATA_ENVIAT          TIMESTAMP(6),
  DOCUMENT_ID          NUMBER(10)                 NOT NULL,
  DOCUMENT_STORE_ID    NUMBER(19),
  ESTAT                NUMBER(10),
  MOTIU_REBUIG         VARCHAR2(255 CHAR),
  TOKEN_ID             NUMBER(19)                 NOT NULL,
  TRANSICIO_KO         VARCHAR2(255 CHAR),
  TRANSICIO_OK         VARCHAR2(255 CHAR),
  TRANSICIO            NUMBER(10),
  DATA_SIGNAT_REBUTJAT TIMESTAMP(6),
  DATA_CUSTODIA_INTENT TIMESTAMP(6),
  DATA_CUSTODIA_OK     TIMESTAMP(6),
  DATA_SIGNAL_INTENT   TIMESTAMP(6),
  DATA_SIGNAL_OK       TIMESTAMP(6),
  DATA_CB_PRI          TIMESTAMP(6),
  DATA_CB_DAR          TIMESTAMP(6),
  ERROR_CB_PROCES      CLOB,
  PROCESS_INSTANCE_ID  VARCHAR2(255 CHAR),
  EXPEDIENT_ID         NUMBER(19)
);


CREATE TABLE HEL_REDIR
(
  ID               NUMBER(19)                   NOT NULL,
  DATA_CANCELACIO  TIMESTAMP(6),
  DATA_FI          TIMESTAMP(6)                 NOT NULL,
  DATA_INICI       TIMESTAMP(6)                 NOT NULL,
  EXPEDIENT_TIPUS_ID  NUMBER(19),
  USUARI_DESTI     VARCHAR2(255 CHAR)           NOT NULL,
  USUARI_ORIGEN    VARCHAR2(255 CHAR)           NOT NULL
);


CREATE TABLE HEL_REGISTRE
(
  ID                   NUMBER(19)               NOT NULL,
  ACCIO                NUMBER(10)               NOT NULL,
  DATA                 TIMESTAMP(6)             NOT NULL,
  ENTITAT              NUMBER(10)               NOT NULL,
  ENTITAT_ID           VARCHAR2(255 CHAR)       NOT NULL,
  EXPEDIENT_ID         NUMBER(19)               NOT NULL,
  MISSATGE             VARCHAR2(1024 CHAR),
  PROCESS_INSTANCE_ID  VARCHAR2(255 CHAR),
  RESPONSABLE_CODI     VARCHAR2(64 CHAR)        NOT NULL,
  VALOR_NOU            VARCHAR2(4000 CHAR),
  VALOR_VELL           VARCHAR2(4000 CHAR)
);


CREATE TABLE HEL_TASCA
(
  ID                   NUMBER(19)               NOT NULL,
  EXPRESSIO_DELEGACIO  VARCHAR2(255 CHAR),
  FORM_EXTERN          VARCHAR2(255 CHAR),
  JBPM_NAME            VARCHAR2(255 CHAR)       NOT NULL,
  MISSATGE_INFO        VARCHAR2(255 CHAR),
  MISSATGE_WARN        VARCHAR2(255 CHAR),
  NOM                  VARCHAR2(255 CHAR),
  NOM_SCRIPT           VARCHAR2(1024 CHAR),
  RECURS_FORM          VARCHAR2(255 CHAR),
  TIPUS                NUMBER(10)               NOT NULL,
  TRAM_MASSIVA         NUMBER(1),
  DEFINICIO_PROCES_ID  NUMBER(19)               NOT NULL,
  FIN_SEGON_PLA 	   NUMBER(1) DEFAULT 1 		NOT NULL,
  AMB_REPRO	 	  	   NUMBER(1) DEFAULT 0
);


CREATE TABLE HEL_TERMINI
(
  ID                   NUMBER(19)               NOT NULL,
  ALERTA_COMPLETAT     NUMBER(1),
  ALERTA_FINAL         NUMBER(1),
  ALERTA_PREVIA        NUMBER(1),
  ANYS                 NUMBER(10),
  CODI                 VARCHAR2(64 CHAR)        NOT NULL,
  DESCRIPCIO           VARCHAR2(255 CHAR),
  DIES                 NUMBER(10),
  DIES_PREVIS_AVIS     NUMBER(10),
  DURADA_PREDEF        NUMBER(1),
  LABORABLE            NUMBER(1),
  MANUAL               NUMBER(1),
  MESOS                NUMBER(10),
  NOM                  VARCHAR2(255 CHAR)       NOT NULL,
  DEFINICIO_PROCES_ID  NUMBER(19),
  EXPEDIENT_TIPUS_ID   NUMBER(19)
);


CREATE TABLE HEL_TERMINI_INICIAT
(
  ID                   NUMBER(19)               NOT NULL,
  ALERTA_COMPLETAT     NUMBER(1),
  ALERTA_FINAL         NUMBER(1),
  ALERTA_PREVIA        NUMBER(1),
  ANYS                 NUMBER(10),
  DATA_ATURADA         DATE,
  DATA_CANCEL          DATE,
  DATA_COMPLETAT       DATE,
  DATA_FI              DATE                     NOT NULL,
  DATA_FI_PRORROGA     DATE,
  DATA_INICI           DATE                     NOT NULL,
  DIES                 NUMBER(10),
  DIES_ATURAT          NUMBER(10),
  MESOS                NUMBER(10),
  PROCESS_INSTANCE_ID  VARCHAR2(255 CHAR)       NOT NULL,
  TASK_INSTANCE_ID     VARCHAR2(255 CHAR),
  TIMER_IDS            VARCHAR2(1024 CHAR),
  TERMINI_ID           NUMBER(19)               NOT NULL
);


CREATE TABLE HEL_USUARI
(
  CODI         VARCHAR2(64 CHAR)                NOT NULL,
  ACTIU        NUMBER(1)                        NOT NULL,
  CONTRASENYA  VARCHAR2(255 CHAR)
);


CREATE TABLE HEL_USUARI_PERMIS
(
  CODI    VARCHAR2(64 CHAR)                     NOT NULL,
  PERMIS  VARCHAR2(64 CHAR)                     NOT NULL
);


CREATE TABLE HEL_USUARI_PREFS
(
  CODI            VARCHAR2(64 CHAR)             NOT NULL,
  DEFAULT_ENTORN  VARCHAR2(64 CHAR),
  IDIOMA          VARCHAR2(255 CHAR),
  CABECERA_REDUCIDA NUMBER(1) NULL ,
  LISTADO NUMBER(1) NULL ,
  CONSULTA_ID NUMBER(19) NULL ,
  FILTRO_TAREAS_ACTIVAS NUMBER(1) NULL ,
  NUM_ELEMENTOS_PAGINA NUMBER(3) NULL ,
  DEFAULT_TIPUS_EXPEDIENT NUMBER(19)
);

CREATE TABLE HEL_VALIDACIO
(
  ID         NUMBER(19)                         NOT NULL,
  EXPRESSIO  VARCHAR2(1024 CHAR)                NOT NULL,
  MISSATGE   VARCHAR2(255 CHAR)                 NOT NULL,
  NOM        VARCHAR2(255 CHAR),
  ORDRE      NUMBER(10)                         NOT NULL,
  CAMP_ID    NUMBER(19),
  TASCA_ID   NUMBER(19)
);


CREATE TABLE HEL_VERSIO
(
  ID                    NUMBER(19)              NOT NULL,
  CODI                  VARCHAR2(64 CHAR)       NOT NULL,
  DATA_CREACIO          TIMESTAMP(6)            NOT NULL,
  DATA_EXECUCIO_PROCES  TIMESTAMP(6),
  DATA_EXECUCIO_SCRIPT  TIMESTAMP(6),
  DESCRIPCIO            VARCHAR2(255 CHAR),
  ORDRE                 NUMBER(10)              NOT NULL,
  PROCES_EXECUTAT       NUMBER(1),
  SCRIPT_EXECUTAT       NUMBER(1)
);


CREATE TABLE HEL_REPRO
(
  ID                  NUMBER(19)                NOT NULL,
  USUARI          	  VARCHAR2(255 CHAR),
  EXPTIP_ID			  NUMBER(19),
  TASCA_CODI		  VARCHAR2(255),
  NOM				  VARCHAR2(255 CHAR),
  VALORS   			  CLOB
);


CREATE SEQUENCE HIBERNATE_SEQUENCE
  START WITH 1
  MAXVALUE 999999999999999999999999999
  MINVALUE 1
  NOCYCLE
  CACHE 20
  NOORDER;

CREATE SEQUENCE HEL_ACL_CLASS_SEQ;
CREATE SEQUENCE HEL_ACL_ENTRY_SEQ;
CREATE SEQUENCE HEL_ACL_OBJECT_IDENTITY_SEQ;
CREATE SEQUENCE HEL_ACL_SID_SEQ;


CREATE TABLE JBPM_ACTION
(
  ID_                     NUMBER(19)            NOT NULL,
  CLASS                   CHAR(1 CHAR)          NOT NULL,
  NAME_                   VARCHAR2(255 CHAR),
  ISPROPAGATIONALLOWED_   NUMBER(1),
  ACTIONEXPRESSION_       VARCHAR2(255 CHAR),
  ISASYNC_                NUMBER(1),
  REFERENCEDACTION_       NUMBER(19),
  ACTIONDELEGATION_       NUMBER(19),
  EVENT_                  NUMBER(19),
  PROCESSDEFINITION_      NUMBER(19),
  EXPRESSION_             CLOB,
  TIMERNAME_              VARCHAR2(255 CHAR),
  DUEDATE_                VARCHAR2(255 CHAR),
  REPEAT_                 VARCHAR2(255 CHAR),
  TRANSITIONNAME_         VARCHAR2(255 CHAR),
  TIMERACTION_            NUMBER(19),
  EVENTINDEX_             NUMBER(10),
  EXCEPTIONHANDLER_       NUMBER(19),
  EXCEPTIONHANDLERINDEX_  NUMBER(10)
);


CREATE TABLE JBPM_BYTEARRAY
(
  ID_              NUMBER(19)                   NOT NULL,
  NAME_            VARCHAR2(255 CHAR),
  FILEDEFINITION_  NUMBER(19)
);


CREATE TABLE JBPM_BYTEBLOCK
(
  PROCESSFILE_  NUMBER(19)                      NOT NULL,
  BYTES_        RAW(1024),
  INDEX_        NUMBER(10)                      NOT NULL
);


CREATE TABLE JBPM_COMMENT
(
  ID_                 NUMBER(19)                NOT NULL,
  VERSION_            NUMBER(10)                NOT NULL,
  ACTORID_            VARCHAR2(255 CHAR),
  TIME_               TIMESTAMP(6),
  MESSAGE_            CLOB,
  TOKEN_              NUMBER(19),
  TASKINSTANCE_       NUMBER(19),
  TOKENINDEX_         NUMBER(10),
  TASKINSTANCEINDEX_  NUMBER(10)
);


CREATE TABLE JBPM_DECISIONCONDITIONS
(
  DECISION_        NUMBER(19)                   NOT NULL,
  TRANSITIONNAME_  VARCHAR2(255 CHAR),
  EXPRESSION_      VARCHAR2(255 CHAR),
  INDEX_           NUMBER(10)                   NOT NULL
);


CREATE TABLE JBPM_DELEGATION
(
  ID_                 NUMBER(19)                NOT NULL,
  CLASSNAME_          CLOB,
  CONFIGURATION_      CLOB,
  CONFIGTYPE_         VARCHAR2(255 CHAR),
  PROCESSDEFINITION_  NUMBER(19)
);


CREATE TABLE JBPM_EVENT
(
  ID_                 NUMBER(19)                NOT NULL,
  EVENTTYPE_          VARCHAR2(255 CHAR),
  TYPE_               CHAR(1 CHAR),
  GRAPHELEMENT_       NUMBER(19),
  PROCESSDEFINITION_  NUMBER(19),
  NODE_               NUMBER(19),
  TRANSITION_         NUMBER(19),
  TASK_               NUMBER(19)
);


CREATE TABLE JBPM_EXCEPTIONHANDLER
(
  ID_                  NUMBER(19)               NOT NULL,
  EXCEPTIONCLASSNAME_  CLOB,
  TYPE_                CHAR(1 CHAR),
  GRAPHELEMENT_        NUMBER(19),
  PROCESSDEFINITION_   NUMBER(19),
  GRAPHELEMENTINDEX_   NUMBER(10),
  NODE_                NUMBER(19),
  TRANSITION_          NUMBER(19),
  TASK_                NUMBER(19)
);


CREATE TABLE JBPM_ID_GROUP
(
  ID_      NUMBER(19)                           NOT NULL,
  CLASS_   CHAR(1 CHAR)                         NOT NULL,
  NAME_    VARCHAR2(255 CHAR),
  TYPE_    VARCHAR2(255 CHAR),
  PARENT_  NUMBER(19)
);


CREATE TABLE JBPM_ID_MEMBERSHIP
(
  ID_     NUMBER(19)                            NOT NULL,
  CLASS_  CHAR(1 CHAR)                          NOT NULL,
  NAME_   VARCHAR2(255 CHAR),
  ROLE_   VARCHAR2(255 CHAR),
  USER_   NUMBER(19),
  GROUP_  NUMBER(19)
);


CREATE TABLE JBPM_ID_PERMISSIONS
(
  ENTITY_  NUMBER(19)                           NOT NULL,
  CLASS_   VARCHAR2(255 CHAR),
  NAME_    VARCHAR2(255 CHAR),
  ACTION_  VARCHAR2(255 CHAR)
);


CREATE TABLE JBPM_ID_USER
(
  ID_        NUMBER(19)                         NOT NULL,
  CLASS_     CHAR(1 CHAR)                       NOT NULL,
  NAME_      VARCHAR2(255 CHAR),
  EMAIL_     VARCHAR2(255 CHAR),
  PASSWORD_  VARCHAR2(255 CHAR)
);


CREATE TABLE JBPM_JOB
(
  ID_                NUMBER(19)                 NOT NULL,
  CLASS_             CHAR(1 CHAR)               NOT NULL,
  VERSION_           NUMBER(10)                 NOT NULL,
  DUEDATE_           TIMESTAMP(6),
  PROCESSINSTANCE_   NUMBER(19),
  TOKEN_             NUMBER(19),
  TASKINSTANCE_      NUMBER(19),
  ISSUSPENDED_       NUMBER(1),
  ISEXCLUSIVE_       NUMBER(1),
  LOCKOWNER_         VARCHAR2(255 CHAR),
  LOCKTIME_          TIMESTAMP(6),
  EXCEPTION_         CLOB,
  RETRIES_           NUMBER(10),
  NAME_              VARCHAR2(255 CHAR),
  REPEAT_            VARCHAR2(255 CHAR),
  TRANSITIONNAME_    VARCHAR2(255 CHAR),
  ACTION_            NUMBER(19),
  GRAPHELEMENTTYPE_  VARCHAR2(255 CHAR),
  GRAPHELEMENT_      NUMBER(19),
  NODE_              NUMBER(19)
);


CREATE TABLE JBPM_LOG
(
  ID_                NUMBER(19)                 NOT NULL,
  CLASS_             CHAR(1 CHAR)               NOT NULL,
  INDEX_             NUMBER(10),
  DATE_              TIMESTAMP(6),
  TOKEN_             NUMBER(19),
  PARENT_            NUMBER(19),
  MESSAGE_           CLOB,
  EXCEPTION_         CLOB,
  ACTION_            NUMBER(19),
  NODE_              NUMBER(19),
  ENTER_             TIMESTAMP(6),
  LEAVE_             TIMESTAMP(6),
  DURATION_          NUMBER(19),
  NEWLONGVALUE_      NUMBER(19),
  TRANSITION_        NUMBER(19),
  CHILD_             NUMBER(19),
  SOURCENODE_        NUMBER(19),
  DESTINATIONNODE_   NUMBER(19),
  VARIABLEINSTANCE_  NUMBER(19),
  OLDBYTEARRAY_      NUMBER(19),
  NEWBYTEARRAY_      NUMBER(19),
  OLDDATEVALUE_      TIMESTAMP(6),
  NEWDATEVALUE_      TIMESTAMP(6),
  OLDDOUBLEVALUE_    FLOAT(126),
  NEWDOUBLEVALUE_    FLOAT(126),
  OLDLONGIDCLASS_    VARCHAR2(255 CHAR),
  OLDLONGIDVALUE_    NUMBER(19),
  NEWLONGIDCLASS_    VARCHAR2(255 CHAR),
  NEWLONGIDVALUE_    NUMBER(19),
  OLDSTRINGIDCLASS_  VARCHAR2(255 CHAR),
  OLDSTRINGIDVALUE_  VARCHAR2(255 CHAR),
  NEWSTRINGIDCLASS_  VARCHAR2(255 CHAR),
  NEWSTRINGIDVALUE_  VARCHAR2(255 CHAR),
  OLDLONGVALUE_      NUMBER(19),
  OLDSTRINGVALUE_    CLOB,
  NEWSTRINGVALUE_    CLOB,
  TASKINSTANCE_      NUMBER(19),
  TASKACTORID_       VARCHAR2(255 CHAR),
  TASKOLDACTORID_    VARCHAR2(255 CHAR),
  SWIMLANEINSTANCE_  NUMBER(19)
);


CREATE TABLE JBPM_MODULEDEFINITION
(
  ID_                 NUMBER(19)                NOT NULL,
  CLASS_              CHAR(1 CHAR)              NOT NULL,
  NAME_               VARCHAR2(255 CHAR),
  PROCESSDEFINITION_  NUMBER(19),
  STARTTASK_          NUMBER(19)
);


CREATE TABLE JBPM_MODULEINSTANCE
(
  ID_                  NUMBER(19)               NOT NULL,
  CLASS_               CHAR(1 CHAR)             NOT NULL,
  VERSION_             NUMBER(10)               NOT NULL,
  PROCESSINSTANCE_     NUMBER(19),
  TASKMGMTDEFINITION_  NUMBER(19),
  NAME_                VARCHAR2(255 CHAR)
);


CREATE TABLE JBPM_NODE
(
  ID_                    NUMBER(19)             NOT NULL,
  CLASS_                 CHAR(1 CHAR)           NOT NULL,
  NAME_                  VARCHAR2(255 CHAR),
  DESCRIPTION_           CLOB,
  PROCESSDEFINITION_     NUMBER(19),
  ISASYNC_               NUMBER(1),
  ISASYNCEXCL_           NUMBER(1),
  ACTION_                NUMBER(19),
  SUPERSTATE_            NUMBER(19),
  SUBPROCNAME_           VARCHAR2(255 CHAR),
  SUBPROCESSDEFINITION_  NUMBER(19),
  DECISIONEXPRESSION_    VARCHAR2(255 CHAR),
  DECISIONDELEGATION     NUMBER(19),
  SCRIPT_                NUMBER(19),
  PARENTLOCKMODE_        VARCHAR2(255 CHAR),
  SIGNAL_                NUMBER(10),
  CREATETASKS_           NUMBER(1),
  ENDTASKS_              NUMBER(1),
  NODECOLLECTIONINDEX_   NUMBER(10)
);


CREATE TABLE JBPM_POOLEDACTOR
(
  ID_                NUMBER(19)                 NOT NULL,
  VERSION_           NUMBER(10)                 NOT NULL,
  ACTORID_           VARCHAR2(255 CHAR),
  SWIMLANEINSTANCE_  NUMBER(19)
);


CREATE TABLE JBPM_PROCESSDEFINITION
(
  ID_                     NUMBER(19)            NOT NULL,
  CLASS_                  CHAR(1 CHAR)          NOT NULL,
  NAME_                   VARCHAR2(255 CHAR),
  DESCRIPTION_            CLOB,
  VERSION_                NUMBER(10),
  ISTERMINATIONIMPLICIT_  NUMBER(1),
  STARTSTATE_             NUMBER(19)
);


CREATE TABLE JBPM_PROCESSINSTANCE
(
  ID_                 NUMBER(19)                NOT NULL,
  VERSION_            NUMBER(10)                NOT NULL,
  KEY_                VARCHAR2(255 CHAR),
  START_              TIMESTAMP(6),
  END_                TIMESTAMP(6),
  ISSUSPENDED_        NUMBER(1),
  PROCESSDEFINITION_  NUMBER(19),
  ROOTTOKEN_          NUMBER(19),
  SUPERPROCESSTOKEN_  NUMBER(19),
  EXPEDIENT_ID_       NUMBER(19)
);


CREATE TABLE JBPM_RUNTIMEACTION
(
  ID_                    NUMBER(19)             NOT NULL,
  VERSION_               NUMBER(10)             NOT NULL,
  EVENTTYPE_             VARCHAR2(255 CHAR),
  TYPE_                  CHAR(1 CHAR),
  GRAPHELEMENT_          NUMBER(19),
  PROCESSINSTANCE_       NUMBER(19),
  ACTION_                NUMBER(19),
  PROCESSINSTANCEINDEX_  NUMBER(10)
);


CREATE TABLE JBPM_SWIMLANE
(
  ID_                      NUMBER(19)           NOT NULL,
  NAME_                    VARCHAR2(255 CHAR),
  ACTORIDEXPRESSION_       VARCHAR2(255 CHAR),
  POOLEDACTORSEXPRESSION_  VARCHAR2(255 CHAR),
  ASSIGNMENTDELEGATION_    NUMBER(19),
  TASKMGMTDEFINITION_      NUMBER(19)
);


CREATE TABLE JBPM_SWIMLANEINSTANCE
(
  ID_                NUMBER(19)                 NOT NULL,
  VERSION_           NUMBER(10)                 NOT NULL,
  NAME_              VARCHAR2(255 CHAR),
  ACTORID_           VARCHAR2(255 CHAR),
  SWIMLANE_          NUMBER(19),
  TASKMGMTINSTANCE_  NUMBER(19)
);


CREATE TABLE JBPM_TASK
(
  ID_                      NUMBER(19)           NOT NULL,
  NAME_                    VARCHAR2(255 CHAR),
  DESCRIPTION_             CLOB,
  PROCESSDEFINITION_       NUMBER(19),
  ISBLOCKING_              NUMBER(1),
  ISSIGNALLING_            NUMBER(1),
  CONDITION_               VARCHAR2(255 CHAR),
  DUEDATE_                 VARCHAR2(255 CHAR),
  PRIORITY_                NUMBER(10),
  ACTORIDEXPRESSION_       VARCHAR2(255 CHAR),
  POOLEDACTORSEXPRESSION_  VARCHAR2(255 CHAR),
  TASKMGMTDEFINITION_      NUMBER(19),
  TASKNODE_                NUMBER(19),
  STARTSTATE_              NUMBER(19),
  ASSIGNMENTDELEGATION_    NUMBER(19),
  SWIMLANE_                NUMBER(19),
  TASKCONTROLLER_          NUMBER(19)
);


CREATE TABLE JBPM_TASKACTORPOOL
(
  TASKINSTANCE_  NUMBER(19)                     NOT NULL,
  POOLEDACTOR_   NUMBER(19)                     NOT NULL
);


CREATE TABLE JBPM_TASKCONTROLLER
(
  ID_                        NUMBER(19)         NOT NULL,
  TASKCONTROLLERDELEGATION_  NUMBER(19)
);


CREATE TABLE JBPM_TASKINSTANCE
(
  ID_                NUMBER(19)                 NOT NULL,
  CLASS_             CHAR(1 CHAR)               NOT NULL,
  VERSION_           NUMBER(10)                 NOT NULL,
  NAME_              VARCHAR2(255 CHAR),
  DESCRIPTION_       CLOB,
  ACTORID_           VARCHAR2(255 CHAR),
  CREATE_            TIMESTAMP(6),
  START_             TIMESTAMP(6),
  END_               TIMESTAMP(6),
  DUEDATE_           TIMESTAMP(6),
  PRIORITY_          NUMBER(10),
  ISCANCELLED_       NUMBER(1),
  ISSUSPENDED_       NUMBER(1),
  ISOPEN_            NUMBER(1),
  ISSIGNALLING_      NUMBER(1),
  ISBLOCKING_        NUMBER(1),
  TASK_              NUMBER(19),
  TOKEN_             NUMBER(19),
  PROCINST_          NUMBER(19),
  SWIMLANINSTANCE_   NUMBER(19),
  TASKMGMTINSTANCE_  NUMBER(19),
  MARCADAFINALITZAR_ TIMESTAMP(6),
  INICIFINALITZACIO_ TIMESTAMP(6),
  ERRORFINALITZACIO_ VARCHAR2(1000 CHAR),
  TITOLACTUALITZAT_  NUMBER(1) DEFAULT 0 		NOT NULL,
  SELECTEDOUTCOME_   VARCHAR2(255 CHAR),
  ROLS_ 			 VARCHAR2(2000)
);


CREATE TABLE JBPM_TOKEN
(
  ID_                        NUMBER(19)         NOT NULL,
  VERSION_                   NUMBER(10)         NOT NULL,
  NAME_                      VARCHAR2(255 CHAR),
  START_                     TIMESTAMP(6),
  END_                       TIMESTAMP(6),
  NODEENTER_                 TIMESTAMP(6),
  NEXTLOGINDEX_              NUMBER(10),
  ISABLETOREACTIVATEPARENT_  NUMBER(1),
  ISTERMINATIONIMPLICIT_     NUMBER(1),
  ISSUSPENDED_               NUMBER(1),
  LOCK_                      VARCHAR2(255 CHAR),
  NODE_                      NUMBER(19),
  PROCESSINSTANCE_           NUMBER(19),
  PARENT_                    NUMBER(19),
  SUBPROCESSINSTANCE_        NUMBER(19)
);


CREATE TABLE JBPM_TOKENVARIABLEMAP
(
  ID_               NUMBER(19)                  NOT NULL,
  VERSION_          NUMBER(10)                  NOT NULL,
  TOKEN_            NUMBER(19),
  CONTEXTINSTANCE_  NUMBER(19)
);


CREATE TABLE JBPM_TRANSITION
(
  ID_                 NUMBER(19)                NOT NULL,
  NAME_               VARCHAR2(255 CHAR),
  DESCRIPTION_        CLOB,
  PROCESSDEFINITION_  NUMBER(19),
  FROM_               NUMBER(19),
  TO_                 NUMBER(19),
  CONDITION_          VARCHAR2(255 CHAR),
  FROMINDEX_          NUMBER(10)
);


CREATE TABLE JBPM_VARIABLEACCESS
(
  ID_              NUMBER(19)                   NOT NULL,
  VARIABLENAME_    VARCHAR2(255 CHAR),
  ACCESS_          VARCHAR2(255 CHAR),
  MAPPEDNAME_      VARCHAR2(255 CHAR),
  SCRIPT_          NUMBER(19),
  PROCESSSTATE_    NUMBER(19),
  TASKCONTROLLER_  NUMBER(19),
  INDEX_           NUMBER(10)
);


CREATE TABLE JBPM_VARIABLEINSTANCE
(
  ID_                NUMBER(19)                 NOT NULL,
  CLASS_             CHAR(1 CHAR)               NOT NULL,
  VERSION_           NUMBER(10)                 NOT NULL,
  NAME_              VARCHAR2(255 CHAR),
  CONVERTER_         CHAR(1 CHAR),
  TOKEN_             NUMBER(19),
  TOKENVARIABLEMAP_  NUMBER(19),
  PROCESSINSTANCE_   NUMBER(19),
  BYTEARRAYVALUE_    NUMBER(19),
  DATEVALUE_         TIMESTAMP(6),
  DOUBLEVALUE_       FLOAT(126),
  LONGIDCLASS_       VARCHAR2(255 CHAR),
  LONGVALUE_         NUMBER(19),
  STRINGIDCLASS_     VARCHAR2(255 CHAR),
  STRINGVALUE_       CLOB,
  TASKINSTANCE_      NUMBER(19)
);

CREATE TABLE HEL_EXPEDIENT_NOTIFICACIO (  
  ID                   NUMBER(19)               NOT NULL,
  ASSUMPTE             VARCHAR2(256)            NOT NULL,
  ESTAT                VARCHAR2(255)            NOT NULL,
  DATA_ENVIAMENT       TIMESTAMP(6)             NOT NULL,
  OBSERVACIONS         VARCHAR2(256),
  DATA_PUBLICACIO      TIMESTAMP(6),
  TIPUS                VARCHAR2(255),
  DATA_RECEPCIO        TIMESTAMP(6),
  REGISTRE_NUM         VARCHAR2(100),
  INTER_DOCNUM        VARCHAR2(100),
  INTER_DOCTIP        NUMBER(10),
  INTER_EMAIL         VARCHAR2(160),
  INTER_LLING1        VARCHAR2(100),
  INTER_LLING2        VARCHAR2(100),
  INTER_NOM           VARCHAR2(100),
  INTER_PAICOD        VARCHAR2(100),
  INTER_PRVCOD        VARCHAR2(100),
  INTER_MUNCOD        VARCHAR2(100),
  INTER_REPRES        NUMBER(1),
  UNITAT_ADM           VARCHAR2(100),
  ORGAN_CODI           VARCHAR2(100),
  OFICINA_CODI          VARCHAR2(100),
  AVIS_TITOL           VARCHAR2(256),
  AVIS_TEXT            VARCHAR2(1024),
  AVIS_TEXTSMS         VARCHAR2(200),
  OFICI_TITOL          VARCHAR2(256),
  OFICI_TEXT           VARCHAR2(1024),
  IDIOMA               VARCHAR2(32),
  ENVIAM_DATA          TIMESTAMP(6),
  ENVIAM_COUNT         NUMBER(10),
  ENVIAM_ERROR         NUMBER(1),
  ENVIAM_ERROR_DESC    VARCHAR2(2048),
  PROCES_DATA          TIMESTAMP(6),
  PROCES_COUNT         NUMBER(10),
  PROCES_ERROR         NUMBER(1),
  PROCES_ERROR_DESC    VARCHAR2(2048),
  DOCUMENT_STORE_ID    NUMBER(19)               NOT NULL,
  EXPEDIENT_ID         NUMBER(19)               NOT NULL,
  RDS_CODI			   NUMBER(19),
  RDS_CLAU			   VARCHAR2(255),
  ERROR_NOTIFICACIO	   VARCHAR2(1024)
);

CREATE TABLE HEL_DOCUMENT_NOTIF_DOC (
  DOCUMENT_NOTIF_ID NUMBER(19)              NOT NULL,
  DOCUMENT_STORE_ID NUMBER(19)              NOT NULL
);

CREATE INDEX HEL_ACCIO_EXPTIP_I ON HEL_ACCIO
(EXPEDIENT_TIPUS_ID);

CREATE INDEX HEL_CAMPREG_REGISTRE_I ON HEL_CAMP_REGISTRE
(REGISTRE_ID);

CREATE INDEX HEL_CAMPREG_MEMBRE_I ON HEL_CAMP_REGISTRE
(MEMBRE_ID);

CREATE INDEX HEL_CAMPAGRUP_DEFPROC_I ON HEL_CAMP_AGRUP
(DEFINICIO_PROCES_ID);

CREATE INDEX HEL_CAMPAGRUP_EXPTIP_I ON HEL_CAMP_AGRUP
(EXPEDIENT_TIPUS_ID);

CREATE INDEX HEL_CAMP_AGRUP_I ON HEL_CAMP
(CAMP_AGRUPACIO_ID);

CREATE INDEX HEL_CAMP_ENUM_I ON HEL_CAMP
(ENUMERACIO_ID);

CREATE INDEX HEL_CAMP_DOMINI_I ON HEL_CAMP
(DOMINI_ID);

CREATE INDEX HEL_CAMP_CONSULTA_I ON HEL_CAMP
(CONSULTA_ID);

CREATE INDEX HEL_CAMP_DEFPROC_I ON HEL_CAMP
(DEFINICIO_PROCES_ID);

CREATE INDEX HEL_CAMP_EXPTIP_I ON HEL_CAMP
(EXPEDIENT_TIPUS_ID);

CREATE INDEX HEL_AREATIPUS_ENTORN_I ON HEL_AREA_TIPUS
(ENTORN_ID);

CREATE INDEX HEL_AREAMEMBRE_AREA_I ON HEL_AREA_MEMBRE
(AREA_ID);

CREATE INDEX HEL_AREA_TIPUS_I ON HEL_AREA
(TIPUS_ID);

CREATE INDEX HEL_AREA_ENTORN_I ON HEL_AREA
(ENTORN_ID);

CREATE INDEX HEL_AREA_PARE_I ON HEL_AREA
(PARE_ID);

CREATE INDEX HEL_ALERTA_EXPEDIENT_I ON HEL_ALERTA
(EXPEDIENT_ID);

CREATE INDEX HEL_ALERTA_ENTORN_I ON HEL_ALERTA
(ENTORN_ID);

CREATE INDEX HEL_ACCIO_DEFPROC_I ON HEL_ACCIO
(DEFINICIO_PROCES_ID);

CREATE INDEX HEL_VALIDACIO_TASCA_I ON HEL_VALIDACIO
(TASCA_ID);

CREATE INDEX HEL_VALIDACIO_CAMP_I ON HEL_VALIDACIO
(CAMP_ID);

CREATE INDEX HEL_TERMINIC_TERMINI_I ON HEL_TERMINI_INICIAT
(TERMINI_ID);

CREATE INDEX HEL_TERMINI_DEFPROC_I ON HEL_TERMINI
(DEFINICIO_PROCES_ID);

CREATE INDEX HEL_TASCA_DEFPROC_I ON HEL_TASCA
(DEFINICIO_PROCES_ID);

CREATE INDEX HEL_TASCA_JBPMNAME_I ON HEL_TASCA
(JBPM_NAME);

CREATE INDEX HEL_PERSONA_RELLEU_I ON HEL_PERSONA
(RELLEU_ID);

CREATE INDEX HEL_FIRTASCA_TASCA_I ON HEL_FIRMA_TASCA
(TASCA_ID);

CREATE INDEX HEL_FIRTASCA_DOCUMENT_I ON HEL_FIRMA_TASCA
(DOCUMENT_ID);

CREATE INDEX HEL_FIRTASCA_EXTIP_I ON HEL_CAMP_TASCA
(EXPEDIENT_TIPUS_ID);

CREATE INDEX HEL_EXPTIP_ENTORN_I ON HEL_EXPEDIENT_TIPUS
(ENTORN_ID);

CREATE INDEX HELIUM.HEL_EXTIP_PARE_I on HELIUM.HEL_EXPEDIENT_TIPUS
(EXPEDIENT_TIPUS_PARE_ID);

CREATE INDEX HEL_EXPEDIENT_TIPUS_I ON HEL_EXPEDIENT
(TIPUS_ID);

CREATE INDEX HEL_EXPEDIENT_ENTORN_I ON HEL_EXPEDIENT
(ENTORN_ID);

CREATE INDEX HEL_EXPEDIENT_ESTAT_I ON HEL_EXPEDIENT
(ESTAT_ID);

CREATE INDEX HEL_ESTAT_EXPTIP_I ON HEL_ESTAT
(EXPEDIENT_TIPUS_ID);

CREATE INDEX HEL_ENUM_ENTORN_I ON HEL_ENUMERACIO
(ENTORN_ID);

CREATE INDEX HEL_DOMINI_EXPTIP_I ON HEL_DOMINI
(EXPEDIENT_TIPUS_ID);

CREATE INDEX HEL_DOMINI_ENTORN_I ON HEL_DOMINI
(ENTORN_ID);

CREATE INDEX HEL_DOCTASCA_DOCUMENT_I ON HEL_DOCUMENT_TASCA
(DOCUMENT_ID);

CREATE INDEX HEL_DOCTASCA_TASCA_I ON HEL_DOCUMENT_TASCA
(TASCA_ID);

CREATE INDEX HEL_DOCTASCA_EXTIP_I ON HEL_CAMP_TASCA
(EXPEDIENT_TIPUS_ID);

CREATE INDEX HEL_DOCUMENT_DEFPROC_I ON HEL_DOCUMENT
(DEFINICIO_PROCES_ID);

CREATE INDEX HEL_DOCUMENT_EXPTIP_I ON HEL_DOCUMENT
(EXPEDIENT_TIPUS_ID);

CREATE INDEX HEL_DOCUMENT_CAMPDATA_I ON HEL_DOCUMENT
(CAMP_DATA_ID);

CREATE INDEX HEL_DEFPROC_ENTORN_I ON HEL_DEFINICIO_PROCES
(ENTORN_ID);

CREATE INDEX HEL_DEFPROC_EXPTIP_I ON HEL_DEFINICIO_PROCES
(EXPEDIENT_TIPUS_ID);

CREATE INDEX HEL_CONSULTACAMP_CONSULTA_I ON HEL_CONSULTA_CAMP
(CONSULTA_ID);

CREATE INDEX HEL_CONSULTA_ENTORN_I ON HEL_CONSULTA
(ENTORN_ID);

CREATE INDEX HEL_CONSULTA_EXPTIP_I ON HEL_CONSULTA
(EXPEDIENT_TIPUS_ID);

CREATE INDEX HEL_CARREC_ENTORN_I ON HEL_CARREC
(ENTORN_ID);

CREATE INDEX HEL_CARREC_AREA_I ON HEL_CARREC
(AREA_ID);

CREATE INDEX HEL_CAMPTASCA_CAMP_I ON HEL_CAMP_TASCA
(CAMP_ID);

CREATE INDEX HEL_CAMPTASCA_CAMP_I ON HEL_CAMP_TASCA
(CAMP_ID);

CREATE INDEX HEL_CAMP_TASCA_EXTIP_I ON HEL_CAMP_TASCA
(EXPEDIENT_TIPUS_ID);

CREATE INDEX HEL_EXPNOTELE_EXPEDIENT_ID_I ON HEL_EXPEDIENT_NOTIF_ELECTR 
(EXPEDIENT_ID);

CREATE INDEX HEL_REPRO_TASCA_CODI_I ON HEL_REPRO 
(TASCA_CODI);

CREATE INDEX HEL_INTERESSAT_EXPEDIENT_ID_I ON HEL_INTERESSAT 
(EXPEDIENT_ID);

CREATE INDEX IDX_VARINST_PRCINS ON JBPM_VARIABLEINSTANCE
(PROCESSINSTANCE_);

CREATE INDEX IDX_VARINST_TKVARMP ON JBPM_VARIABLEINSTANCE
(TOKENVARIABLEMAP_);

CREATE INDEX IDX_VARINST_TK ON JBPM_VARIABLEINSTANCE
(TOKEN_);

CREATE INDEX IDX_TRANSIT_TO ON JBPM_TRANSITION
(TO_);

CREATE INDEX IDX_TRANSIT_FROM ON JBPM_TRANSITION
(FROM_);

CREATE INDEX IDX_TRANS_PROCDEF ON JBPM_TRANSITION
(PROCESSDEFINITION_);

CREATE INDEX IDX_TKVARMAP_CTXT ON JBPM_TOKENVARIABLEMAP
(CONTEXTINSTANCE_);

CREATE INDEX IDX_TKVVARMP_TOKEN ON JBPM_TOKENVARIABLEMAP
(TOKEN_);

CREATE INDEX IDX_TOKEN_SUBPI ON JBPM_TOKEN
(SUBPROCESSINSTANCE_);

CREATE INDEX IDX_TOKEN_NODE ON JBPM_TOKEN
(NODE_);

CREATE INDEX IDX_TOKEN_PROCIN ON JBPM_TOKEN
(PROCESSINSTANCE_);

CREATE INDEX IDX_TOKEN_PARENT ON JBPM_TOKEN
(PARENT_);

CREATE INDEX IDX_TASKINST_PROC ON JBPM_TASKINSTANCE
(PROCINST_);

CREATE INDEX IDX_TASKINST_TSK ON JBPM_TASKINSTANCE
(TASK_, PROCINST_);

CREATE INDEX IDX_TASK_ACTORID ON JBPM_TASKINSTANCE
(ACTORID_);

CREATE INDEX IDX_TASKINST_TOKN ON JBPM_TASKINSTANCE
(TOKEN_);

CREATE INDEX IDX_TASKINST_SUSPOPEN ON JBPM_TASKINSTANCE
(ISSUSPENDED_, ISOPEN_);

CREATE INDEX IDX_TSKINST_SLINST ON JBPM_TASKINSTANCE
(SWIMLANINSTANCE_);

CREATE INDEX IDX_TSKINST_TMINST ON JBPM_TASKINSTANCE
(TASKMGMTINSTANCE_);

CREATE INDEX IDX_TASKINST_TSK2 ON JBPM_TASKINSTANCE
(TASK_);

CREATE INDEX IDX_TASK_TASKMGTDF ON JBPM_TASK
(TASKMGMTDEFINITION_);

CREATE INDEX IDX_TASK_TSKNODE ON JBPM_TASK
(TASKNODE_);

CREATE INDEX IDX_TASK_PROCDEF ON JBPM_TASK
(PROCESSDEFINITION_);

CREATE INDEX IDX_SWIMLINST_SL ON JBPM_SWIMLANEINSTANCE
(SWIMLANE_);

CREATE INDEX IDX_RTACTN_PRCINST ON JBPM_RUNTIMEACTION
(PROCESSINSTANCE_);

CREATE INDEX IDX_RTACTN_ACTION ON JBPM_RUNTIMEACTION
(ACTION_);

CREATE INDEX IDX_PROCIN_KEY ON JBPM_PROCESSINSTANCE
(KEY_);

CREATE INDEX IDX_PROCIN_PROCDEF ON JBPM_PROCESSINSTANCE
(PROCESSDEFINITION_);

CREATE INDEX IDX_PROCIN_ROOTTK ON JBPM_PROCESSINSTANCE
(ROOTTOKEN_);

CREATE INDEX IDX_PROCIN_SPROCTK ON JBPM_PROCESSINSTANCE
(SUPERPROCESSTOKEN_);

CREATE INDEX IDX_PROCDEF_STRTST ON JBPM_PROCESSDEFINITION
(STARTSTATE_);

CREATE INDEX IDX_PLDACTR_ACTID ON JBPM_POOLEDACTOR
(ACTORID_);

CREATE INDEX IDX_TSKINST_SWLANE ON JBPM_POOLEDACTOR
(SWIMLANEINSTANCE_);

CREATE INDEX IDX_NODE_SUPRSTATE ON JBPM_NODE
(SUPERSTATE_);

CREATE INDEX IDX_NODE_ACTION ON JBPM_NODE
(ACTION_);

CREATE INDEX IDX_NODE_PROCDEF ON JBPM_NODE
(PROCESSDEFINITION_);

CREATE INDEX IDX_PSTATE_SBPRCDEF ON JBPM_NODE
(SUBPROCESSDEFINITION_);

CREATE INDEX IDX_MODINST_PRINST ON JBPM_MODULEINSTANCE
(PROCESSINSTANCE_);

CREATE INDEX IDX_MODDEF_PROCDF ON JBPM_MODULEDEFINITION
(PROCESSDEFINITION_);

CREATE INDEX IDX_JOB_PRINST ON JBPM_JOB
(PROCESSINSTANCE_);

CREATE INDEX IDX_JOB_TOKEN ON JBPM_JOB
(TOKEN_);

CREATE INDEX IDX_JOB_TSKINST ON JBPM_JOB
(TASKINSTANCE_);

CREATE INDEX IDX_DELEG_PRCD ON JBPM_DELEGATION
(PROCESSDEFINITION_);

CREATE INDEX IDX_COMMENT_TOKEN ON JBPM_COMMENT
(TOKEN_);

CREATE INDEX IDX_COMMENT_TSK ON JBPM_COMMENT
(TASKINSTANCE_);

CREATE INDEX IDX_ACTION_EVENT ON JBPM_ACTION
(EVENT_);

CREATE INDEX IDX_ACTION_PROCDF ON JBPM_ACTION
(PROCESSDEFINITION_);

CREATE INDEX IDX_ACTION_ACTNDL ON JBPM_ACTION
(ACTIONDELEGATION_);

CREATE INDEX IDX_LOG_ACTION ON JBPM_LOG
(ACTION_);

CREATE INDEX IDX_LOG_CHILD ON JBPM_LOG
(CHILD_);

CREATE INDEX IDX_LOG_DESTINATIONNODE ON JBPM_LOG
(DESTINATIONNODE_);

CREATE INDEX IDX_LOG_INDEX_NEWBYTEARRAY ON JBPM_LOG
(NEWBYTEARRAY_);

CREATE INDEX IDX_LOG_NODE ON JBPM_LOG
(NODE_);

CREATE INDEX IDX_LOG_OLDBYTEARRAY ON JBPM_LOG
(OLDBYTEARRAY_);

CREATE INDEX IDX_LOG_PARENT ON JBPM_LOG
(PARENT_);

CREATE INDEX IDX_LOG_SOURCENODE ON JBPM_LOG
(SOURCENODE_);

CREATE INDEX IDX_LOG_SWIMINST ON JBPM_LOG
(SWIMLANEINSTANCE_);

CREATE INDEX IDX_LOG_TASKINSTANCE ON JBPM_LOG
(TASKINSTANCE_);

CREATE INDEX IDX_LOG_TOKEN ON JBPM_LOG
(TOKEN_);

CREATE INDEX IDX_LOG_TRANSITION ON JBPM_LOG
(TRANSITION_);

CREATE INDEX IDX_LOG_VARINSTANCE ON JBPM_LOG
(VARIABLEINSTANCE_);

CREATE INDEX IDX_BYTEARR_FILE ON JBPM_BYTEARRAY
(FILEDEFINITION_);

CREATE INDEX IDX_VARINST_TINSTANCE ON JBPM_VARIABLEINSTANCE
(TASKINSTANCE_);

CREATE INDEX IDX_VARINST_BARR ON JBPM_VARIABLEINSTANCE
(BYTEARRAYVALUE_);

CREATE INDEX IDX_MODINST_DF ON JBPM_MODULEINSTANCE
(TASKMGMTDEFINITION_);

CREATE INDEX HEL_EXPLOG_EXPID_I ON HEL_EXPEDIENT_LOG 
(EXPEDIENT_ID);

CREATE INDEX HEL_EXPLOG_TARGETID_I ON HEL_EXPEDIENT_LOG 
(TARGET_ID);

CREATE INDEX HEL_NOTIFICACIO_EXPEDIENT_ID_I ON HEL_EXPEDIENT_NOTIFICACIO 
(EXPEDIENT_ID);

CREATE INDEX HEL_INTERESSAT_EXPEDIENT_ID_I ON HEL_INTERESSAT 
(EXPEDIENT_ID);

CREATE INDEX HEL_ENUM_ID_I ON HEL_ENUMERACIO_VALORS (ENUMERACIO_ID);


ALTER TABLE HEL_ACCIO ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, DEFINICIO_PROCES_ID, EXPEDIENT_TIPUS_ID));

ALTER TABLE HEL_ACL_CLASS ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CLASS));

ALTER TABLE HEL_ACL_ENTRY ADD (
  PRIMARY KEY
 (ID));

ALTER TABLE HEL_ACL_OBJECT_IDENTITY ADD (
  PRIMARY KEY
 (ID));

ALTER TABLE HEL_ACL_SID ADD (
  PRIMARY KEY
 (ID));

ALTER TABLE HEL_ACTION_LOG ADD (
  PRIMARY KEY
 (ID));

ALTER TABLE HEL_ALERTA ADD (
  PRIMARY KEY
 (ID));

ALTER TABLE HEL_AREA ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, ENTORN_ID));

ALTER TABLE HEL_AREA_JBPMID ADD (
  PRIMARY KEY
 (ID));

ALTER TABLE HEL_AREA_MEMBRE ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, AREA_ID));

ALTER TABLE HEL_AREA_TIPUS ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, ENTORN_ID));

ALTER TABLE HEL_CAMP ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, DEFINICIO_PROCES_ID, EXPEDIENT_TIPUS_ID));

ALTER TABLE HEL_CAMP_AGRUP ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, DEFINICIO_PROCES_ID, EXPEDIENT_TIPUS_ID));

ALTER TABLE HEL_CAMP_REGISTRE ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (REGISTRE_ID, ORDRE),
  UNIQUE (REGISTRE_ID, MEMBRE_ID));

ALTER TABLE HEL_CAMP_TASCA ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (TASCA_ID, ORDRE),
  UNIQUE (CAMP_ID, TASCA_ID));

ALTER TABLE HEL_CARREC ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, ENTORN_ID));

ALTER TABLE HEL_CARREC_JBPMID ADD (
  PRIMARY KEY
 (ID));

ALTER TABLE HEL_CONSULTA ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, ENTORN_ID, EXPEDIENT_TIPUS_ID));

ALTER TABLE HEL_CONSULTA_CAMP ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CONSULTA_ID, CAMP_CODI, DEFPROC_JBPMKEY, DEFPROC_VERSIO, TIPUS));

ALTER TABLE HEL_CONSULTA_SUB ADD (
  PRIMARY KEY
 (PARE_ID, FILL_ID));

ALTER TABLE HEL_DEFINICIO_PROCES ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (JBPM_ID));

ALTER TABLE HEL_DOCUMENT ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, DEFINICIO_PROCES_ID, EXPEDIENT_TIPUS_ID));

ALTER TABLE HEL_DOCUMENT_STORE ADD (
  PRIMARY KEY
 (ID));

ALTER TABLE HEL_DOCUMENT_TASCA ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (TASCA_ID, ORDRE),
  UNIQUE (DOCUMENT_ID, TASCA_ID));

ALTER TABLE HEL_DOMINI ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, ENTORN_ID, EXPEDIENT_TIPUS_ID));

ALTER TABLE HEL_ENTORN ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI));

ALTER TABLE HEL_ENUMERACIO ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, ENTORN_ID));

ALTER TABLE HEL_ENUMERACIO_VALORS ADD (
  PRIMARY KEY
 (ID));

ALTER TABLE HEL_ESTAT ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, EXPEDIENT_TIPUS_ID));

ALTER TABLE HEL_EXPEDIENT ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (PROCESS_INSTANCE_ID));

ALTER TABLE HEL_EXEC_MASEXP ADD (
  PRIMARY KEY
 (ID));
  
ALTER TABLE HEL_EXEC_MASSIVA ADD (
  PRIMARY KEY
 (ID));
  
ALTER TABLE HEL_EXPEDIENT_LOG ADD (
  PRIMARY KEY
 (ID));

ALTER TABLE HEL_EXPEDIENT_RELS ADD (
  PRIMARY KEY
 (ORIGEN_ID, DESTI_ID));

ALTER TABLE HEL_EXPEDIENT_TIPUS ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (SISTRA_CODTRA),
  UNIQUE (CODI, ENTORN_ID));

ALTER TABLE HEL_EXPEDIENT_TIPUS_SEQANY ADD (
  PRIMARY KEY (ID));

ALTER TABLE HEL_EXPEDIENT_TIPUS_SEQDEFANY ADD (
  PRIMARY KEY (ID));

ALTER TABLE HEL_FESTIU ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (DATA));

ALTER TABLE HEL_FIRMA_TASCA ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (TASCA_ID, ORDRE),
  UNIQUE (DOCUMENT_ID, TASCA_ID));

ALTER TABLE HEL_FORMEXT ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (FORMID));

ALTER TABLE HEL_MAP_SISTRA ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODIHELIUM, EXPEDIENT_TIPUS_ID));

ALTER TABLE HEL_PERMIS ADD (
  PRIMARY KEY
 (CODI));

ALTER TABLE HEL_PERSONA ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI));

ALTER TABLE HEL_PORTASIGNATURES ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (DOCUMENT_ID, TOKEN_ID));

ALTER TABLE HEL_REDIR ADD (
  PRIMARY KEY
 (ID));

ALTER TABLE HEL_REGISTRE ADD (
  PRIMARY KEY
 (ID));

ALTER TABLE HEL_TASCA ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (JBPM_NAME, DEFINICIO_PROCES_ID));

ALTER TABLE HEL_TERMINI ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI, DEFINICIO_PROCES_ID, EXPEDIENT_TIPUS_ID));

ALTER TABLE HEL_TERMINI_INICIAT ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (TERMINI_ID, PROCESS_INSTANCE_ID));

ALTER TABLE HEL_USUARI ADD (
  PRIMARY KEY
 (CODI));

ALTER TABLE HEL_USUARI_PERMIS ADD (
  PRIMARY KEY
 (CODI, PERMIS));

ALTER TABLE HEL_USUARI_PREFS ADD (
  PRIMARY KEY
 (CODI));

ALTER TABLE HEL_VALIDACIO ADD (
  PRIMARY KEY
 (ID));

ALTER TABLE HEL_VERSIO ADD (
  PRIMARY KEY
 (ID),
  UNIQUE (CODI),
  UNIQUE (ORDRE));
  
ALTER TABLE HEL_REPRO ADD (
  PRIMARY KEY
 (ID));

ALTER TABLE JBPM_ACTION ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_BYTEARRAY ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_BYTEBLOCK ADD (
  PRIMARY KEY
 (PROCESSFILE_, INDEX_));

ALTER TABLE JBPM_COMMENT ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_DECISIONCONDITIONS ADD (
  PRIMARY KEY
 (DECISION_, INDEX_));

ALTER TABLE JBPM_DELEGATION ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_EVENT ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_EXCEPTIONHANDLER ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_ID_GROUP ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_ID_MEMBERSHIP ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_ID_USER ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_JOB ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_LOG ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_MODULEDEFINITION ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_MODULEINSTANCE ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_NODE ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_POOLEDACTOR ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_PROCESSDEFINITION ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_PROCESSINSTANCE ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_RUNTIMEACTION ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_SWIMLANE ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_SWIMLANEINSTANCE ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_TASK ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_TASKACTORPOOL ADD (
  PRIMARY KEY
 (TASKINSTANCE_, POOLEDACTOR_));

ALTER TABLE JBPM_TASKCONTROLLER ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_TASKINSTANCE ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_TOKEN ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_TOKENVARIABLEMAP ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_TRANSITION ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_VARIABLEACCESS ADD (
  PRIMARY KEY
 (ID_));

ALTER TABLE JBPM_VARIABLEINSTANCE ADD (
  PRIMARY KEY
 (ID_));
 
 ALTER TABLE HEL_EXPEDIENT_NOTIFICACIO ADD (
  CONSTRAINT HEL_NOTIF_PK PRIMARY KEY (ID),
  CONSTRAINT HEL_NOTIF_MULT_UK UNIQUE (EXPEDIENT_ID, DOCUMENT_STORE_ID, ASSUMPTE, DATA_ENVIAMENT, TIPUS, INTER_DOCTIP, INTER_DOCNUM));

 ALTER TABLE HEL_INTERESSAT ADD (
  CONSTRAINT HEL_INTERESSAT_PK PRIMARY KEY (ID),
  CONSTRAINT HEL_EXPEDIENT_INTERESSAT_FK FOREIGN KEY (EXPEDIENT_ID) 
 REFERENCES HEL_EXPEDIENT (ID));  
 
 ALTER TABLE HEL_EXPEDIENT_NOTIFICACIO ADD (
  CONSTRAINT HEL_EXPEDIENT_NOTIF_FK FOREIGN KEY (EXPEDIENT_ID) 
 REFERENCES HEL_EXPEDIENT (ID),
  CONSTRAINT HEL_DOCUMENT_NOTIF_FK FOREIGN KEY (DOCUMENT_STORE_ID) 
 REFERENCES HEL_DOCUMENT_STORE (ID));

 ALTER TABLE HEL_PORTASIGNATURES ADD (
  CONSTRAINT HEL_EXPEDIENT_PSIGNA_FK FOREIGN KEY (EXPEDIENT_ID) 
 REFERENCES HEL_EXPEDIENT (ID));

ALTER TABLE HEL_DOCUMENT_NOTIF_DOC ADD (
  CONSTRAINT HEL_DOCUMENT_NOTIFDOC_PK PRIMARY KEY (DOCUMENT_NOTIF_ID, DOCUMENT_STORE_ID));
  
ALTER TABLE HEL_DOCUMENT_NOTIF_DOC ADD (
  CONSTRAINT HEL_DOCUMENT_NOTIFDOC_NOTIF_FK FOREIGN KEY (DOCUMENT_NOTIF_ID) 
    REFERENCES HEL_EXPEDIENT_NOTIFICACIO (ID),
  CONSTRAINT HEL_DOCUMENT_NOTIFDOC_DOC_FK FOREIGN KEY (DOCUMENT_STORE_ID) 
    REFERENCES HEL_DOCUMENT_STORE (ID));

ALTER TABLE HEL_ACCIO ADD (
  CONSTRAINT HEL_DEFPROC_ACCIO_FK 
 FOREIGN KEY (DEFINICIO_PROCES_ID) 
 REFERENCES HEL_DEFINICIO_PROCES (ID));
	
ALTER TABLE HEL_ACCIO ADD (
  CONSTRAINT HEL_EXPTIP_ACCIO_FK 
 FOREIGN KEY (EXPEDIENT_TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID));

 ALTER TABLE HEL_EXPEDIENT_NOTIF_ELECTR ADD (
  CONSTRAINT HEL_EXPEDIENT_EXPNOTELE_FK 
 FOREIGN KEY (EXPEDIENT_ID) 
 REFERENCES HEL_EXPEDIENT (ID));
			 
ALTER TABLE HEL_ACL_ENTRY ADD (
  CONSTRAINT HEL_ACLOBJID_ACLENTRY_FK 
 FOREIGN KEY (ACL_OBJECT_IDENTITY) 
 REFERENCES HEL_ACL_OBJECT_IDENTITY (ID),
  CONSTRAINT HEL_ACLSID_ACLENTRY_FK 
 FOREIGN KEY (SID) 
 REFERENCES HEL_ACL_SID (ID));

ALTER TABLE HEL_ACL_OBJECT_IDENTITY ADD (
  CONSTRAINT HEL_ACLSID_ACLOBJID_FK 
 FOREIGN KEY (OWNER_SID) 
 REFERENCES HEL_ACL_SID (ID),
  CONSTRAINT HEL_ACLOBJID_ACLOBJID_FK 
 FOREIGN KEY (PARENT_OBJECT) 
 REFERENCES HEL_ACL_OBJECT_IDENTITY (ID),
  CONSTRAINT HEL_ACLCLASS_ACLOBJID_FK 
 FOREIGN KEY (OBJECT_ID_CLASS) 
 REFERENCES HEL_ACL_CLASS (ID));

ALTER TABLE HEL_ALERTA ADD (
  CONSTRAINT HEL_ENTORN_ALERTA_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID),
  CONSTRAINT HEL_EXPEDIENT_ALERTA_FK 
 FOREIGN KEY (EXPEDIENT_ID) 
 REFERENCES HEL_EXPEDIENT (ID),
  CONSTRAINT HEL_TERMINI_ALERTA_FK 
 FOREIGN KEY (TERMINI_INICIAT_ID) 
 REFERENCES HEL_TERMINI_INICIAT (ID));

ALTER TABLE HEL_AREA ADD (
  CONSTRAINT HEL_ENTORN_AREA_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID),
  CONSTRAINT HEL_AREA_AREA_FK 
 FOREIGN KEY (PARE_ID) 
 REFERENCES HEL_AREA (ID),
  CONSTRAINT HEL_AREATIPUS_AREA_FK 
 FOREIGN KEY (TIPUS_ID) 
 REFERENCES HEL_AREA_TIPUS (ID));

ALTER TABLE HEL_AREA_MEMBRE ADD (
  CONSTRAINT HEL_AREA_AREAMEMBRE_FK 
 FOREIGN KEY (AREA_ID) 
 REFERENCES HEL_AREA (ID));

ALTER TABLE HEL_AREA_TIPUS ADD (
  CONSTRAINT HEL_ENTORN_AREATIPUS_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID));

ALTER TABLE HEL_CAMP ADD (
  CONSTRAINT HEL_DEFPROC_CAMP_FK 
 FOREIGN KEY (DEFINICIO_PROCES_ID) 
 REFERENCES HEL_DEFINICIO_PROCES (ID),
  CONSTRAINT HEL_EXPTIP_CAMP_FK 
 FOREIGN KEY (EXPEDIENT_TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID), 
  CONSTRAINT HEL_CAMPAGRUP_CAMP_FK 
 FOREIGN KEY (CAMP_AGRUPACIO_ID) 
 REFERENCES HEL_CAMP_AGRUP (ID),
  CONSTRAINT HEL_ENUMERACIO_CAMP_FK 
 FOREIGN KEY (ENUMERACIO_ID) 
 REFERENCES HEL_ENUMERACIO (ID),
  CONSTRAINT HEL_DOMINI_CAMP_FK 
 FOREIGN KEY (DOMINI_ID) 
 REFERENCES HEL_CONSULTA (ID),
  CONSTRAINT HEL_CONSULTA_CAMP_FK 
 FOREIGN KEY (CONSULTA_ID) 
 REFERENCES HEL_CONSULTA (ID));

ALTER TABLE HEL_CAMP_AGRUP ADD (
  CONSTRAINT HEL_DEFPROC_CAMPAGRUP_FK 
 FOREIGN KEY (DEFINICIO_PROCES_ID) 
 REFERENCES HEL_DEFINICIO_PROCES (ID),
  CONSTRAINT HEL_EXPTIP_CAMPAGRUP_FK 
 FOREIGN KEY (EXPEDIENT_TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID));
 
ALTER TABLE HEL_CAMP_REGISTRE ADD (
  CONSTRAINT HEL_CAMP_REGMEMBRE_FK 
 FOREIGN KEY (MEMBRE_ID) 
 REFERENCES HEL_CAMP (ID),
  CONSTRAINT HEL_CAMP_REGREGISTRE_FK 
 FOREIGN KEY (REGISTRE_ID) 
 REFERENCES HEL_CAMP (ID));

ALTER TABLE HEL_CAMP_TASCA ADD (
  CONSTRAINT HEL_TASCA_CAMPTASCA_FK 
 FOREIGN KEY (TASCA_ID) 
 REFERENCES HEL_TASCA (ID),
  CONSTRAINT HEL_CAMP_CAMPTASCA_FK 
 FOREIGN KEY (CAMP_ID) 
 REFERENCES HEL_CAMP (ID),
  CONSTRAINT HEL_EXPTIPUS_CAMPTASCA_FK 
 FOREIGN KEY (EXPEDIENT_TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID)
 );

ALTER TABLE HEL_CARREC ADD (
  CONSTRAINT HEL_ENTORN_CARREC_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID),
  CONSTRAINT HEL_AREA_CARREC_FK 
 FOREIGN KEY (AREA_ID) 
 REFERENCES HEL_AREA (ID));

ALTER TABLE HEL_CONSULTA ADD (
  CONSTRAINT HEL_ENTORN_CONSULTA_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID),
  CONSTRAINT HEL_EXPTIP_CONSULTA_FK 
 FOREIGN KEY (EXPEDIENT_TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID));

ALTER TABLE HEL_CONSULTA_CAMP ADD (
  CONSTRAINT HEL_CONSULTA_CONCAMP_FK 
 FOREIGN KEY (CONSULTA_ID) 
 REFERENCES HEL_CONSULTA (ID));

ALTER TABLE HEL_CONSULTA_SUB ADD (
  CONSTRAINT HEL_PARE_CONSULTASUB_FK 
 FOREIGN KEY (FILL_ID) 
 REFERENCES HEL_CONSULTA (ID),
  CONSTRAINT HEL_FILL_CONSULTASUB_FK 
 FOREIGN KEY (PARE_ID) 
 REFERENCES HEL_CONSULTA (ID));

ALTER TABLE HEL_DEFINICIO_PROCES ADD (
  CONSTRAINT HEL_ENTORN_DEFPROC_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID),
  CONSTRAINT HEL_EXPTIP_DEFPROC_FK 
 FOREIGN KEY (EXPEDIENT_TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID));

ALTER TABLE HEL_DOCUMENT ADD (
  CONSTRAINT HEL_DEFPROC_DOCUMENT_FK 
 FOREIGN KEY (DEFINICIO_PROCES_ID) 
 REFERENCES HEL_DEFINICIO_PROCES (ID),
 CONSTRAINT HEL_EXPTIP_DOC_FK 
 FOREIGN KEY (EXPEDIENT_TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID),
  CONSTRAINT HEL_CAMP_DOCUMENT_FK 
 FOREIGN KEY (CAMP_DATA_ID) 
 REFERENCES HEL_CAMP (ID));

ALTER TABLE HEL_DOCUMENT_TASCA ADD (
  CONSTRAINT HEL_TASCA_DOCTASCA_FK 
 FOREIGN KEY (TASCA_ID) 
 REFERENCES HEL_TASCA (ID),
  CONSTRAINT HEL_DOCUMENT_DOCTASCA_FK 
 FOREIGN KEY (DOCUMENT_ID) 
 REFERENCES HEL_DOCUMENT (ID),
  CONSTRAINT HEL_EXPTIPUS_DOCTASCA_FK 
 FOREIGN KEY (EXPEDIENT_TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID)
 );

ALTER TABLE HEL_DOMINI ADD (
  CONSTRAINT HEL_ENTORN_DOMINI_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID),
  CONSTRAINT HEL_EXPTIP_DOMINI_FK 
 FOREIGN KEY (EXPEDIENT_TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID));

ALTER TABLE HEL_ENUMERACIO ADD (
  CONSTRAINT HEL_ENTORN_ENUMERACIO_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID),
  CONSTRAINT HEL_EXPTIP_ENUMERACIO_FK 
 FOREIGN KEY (EXPEDIENT_TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID));

ALTER TABLE HEL_ENUMERACIO_VALORS ADD (
  CONSTRAINT HEL_ENUMERACIO_VALORS_FK 
 FOREIGN KEY (ENUMERACIO_ID) 
 REFERENCES HEL_ENUMERACIO (ID));

ALTER TABLE HEL_ESTAT ADD (
  CONSTRAINT HEL_EXPTIPUS_ESTAT_FK 
 FOREIGN KEY (EXPEDIENT_TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID));

ALTER TABLE HEL_EXEC_MASEXP ADD (
  CONSTRAINT HEL_EXPEDIENT_EXEMASEX_FK
 FOREIGN KEY (EXPEDIENT_ID) 
 REFERENCES HEL_EXPEDIENT (ID),
CONSTRAINT HEL_EXECMAS_EXEMASEX_FK
 FOREIGN KEY (EXECMAS_ID) 
 REFERENCES HEL_EXEC_MASSIVA (ID));
 
ALTER TABLE HEL_EXEC_MASSIVA ADD (
  CONSTRAINT HEL_EXPTIPUS_EXEMAS_FK
 FOREIGN KEY (EXPEDIENT_TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID));
 
ALTER TABLE HEL_EXPEDIENT ADD (
  CONSTRAINT HEL_ENTORN_EXPEDIENT_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID),
  CONSTRAINT HEL_ESTAT_EXPEDIENT_FK 
 FOREIGN KEY (ESTAT_ID) 
 REFERENCES HEL_ESTAT (ID),
  CONSTRAINT HEL_EXPTIPUS_EXPEDIENT_FK 
 FOREIGN KEY (TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID));

ALTER TABLE HEL_EXPEDIENT_LOG ADD (
  CONSTRAINT HEL_EXPEDIENT_LOGS_FK
 FOREIGN KEY (EXPEDIENT_ID) 
 REFERENCES HEL_EXPEDIENT (ID));

ALTER TABLE HEL_EXPEDIENT_RELS ADD (
  CONSTRAINT HEL_DESTI_EXPREL_FK 
 FOREIGN KEY (DESTI_ID) 
 REFERENCES HEL_EXPEDIENT (ID),
  CONSTRAINT HEL_ORIGEN_EXPREL_FK 
 FOREIGN KEY (ORIGEN_ID) 
 REFERENCES HEL_EXPEDIENT (ID));

ALTER TABLE HEL_EXPEDIENT_TIPUS ADD (
  CONSTRAINT HEL_ENTORN_EXPTIPUS_FK 
 FOREIGN KEY (ENTORN_ID) 
 REFERENCES HEL_ENTORN (ID));

ALTER TABLE HEL_EXPEDIENT_TIPUS ADD (
  CONSTRAINT HEL_EXPTIPUS_PARE_EXPTIPUS_FK 
 FOREIGN KEY (EXPEDIENT_TIPUS_PARE_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID));

ALTER TABLE HEL_EXPEDIENT_TIPUS_SEQANY ADD (
  CONSTRAINT HEL_EXPTIPUS_SEQANY_FK
 FOREIGN KEY (EXPEDIENT_TIPUS)
 REFERENCES HEL_EXPEDIENT_TIPUS (ID));

ALTER TABLE HEL_EXPEDIENT_TIPUS_SEQDEFANY ADD (
   CONSTRAINT HEL_EXPTIPUS_SEQDEFANY_FK 
  FOREIGN KEY (EXPEDIENT_TIPUS) 
  REFERENCES HEL_EXPEDIENT_TIPUS (ID));

ALTER TABLE HEL_FIRMA_TASCA ADD (
  CONSTRAINT HEL_TASCA_FIRTASCA_FK 
 FOREIGN KEY (TASCA_ID) 
 REFERENCES HEL_TASCA (ID),
  CONSTRAINT HEL_DOCUMENT_FIRTASCA_FK 
 FOREIGN KEY (DOCUMENT_ID) 
 REFERENCES HEL_DOCUMENT (ID),
  CONSTRAINT HEL_EXPTIPUS_FIRTASCA_FK 
 FOREIGN KEY (EXPEDIENT_TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID)
 );

ALTER TABLE HEL_MAP_SISTRA ADD (
  CONSTRAINT HEL_EXPTIPUS_MAP_SISTRA_FK 
 FOREIGN KEY (EXPEDIENT_TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID));

ALTER TABLE HEL_PERSONA ADD (
  CONSTRAINT HEL_RELLEU_PERSONA_FK 
 FOREIGN KEY (RELLEU_ID) 
 REFERENCES HEL_PERSONA (ID));

ALTER TABLE HEL_TASCA ADD (
  CONSTRAINT HEL_DEFPROC_TASCA_FK 
 FOREIGN KEY (DEFINICIO_PROCES_ID) 
 REFERENCES HEL_DEFINICIO_PROCES (ID));

ALTER TABLE HEL_TERMINI ADD (
  CONSTRAINT HEL_DEFPROC_TERMINI_FK 
 FOREIGN KEY (DEFINICIO_PROCES_ID) 
 REFERENCES HEL_DEFINICIO_PROCES (ID),
  CONSTRAINT HEL_EXPTIP_TERMINI_FK 
 FOREIGN KEY (EXPEDIENT_TIPUS_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID));

ALTER TABLE HEL_TERMINI_INICIAT ADD (
  CONSTRAINT HEL_TERMINI_TERMINIC_FK 
 FOREIGN KEY (TERMINI_ID) 
 REFERENCES HEL_TERMINI (ID));

ALTER TABLE HEL_USUARI_PERMIS ADD (
  CONSTRAINT HEL_PERMIS_USUARI_FK 
 FOREIGN KEY (CODI) 
 REFERENCES HEL_USUARI (CODI),
  CONSTRAINT HEL_USUARI_PERMIS_FK 
 FOREIGN KEY (PERMIS) 
 REFERENCES HEL_PERMIS (CODI));

ALTER TABLE HEL_VALIDACIO ADD (
  CONSTRAINT HEL_TASCA_VALIDACIO_FK 
 FOREIGN KEY (TASCA_ID) 
 REFERENCES HEL_TASCA (ID),
  CONSTRAINT HEL_CAMP_VALIDACIO_FK 
 FOREIGN KEY (CAMP_ID) 
 REFERENCES HEL_CAMP (ID));
ALTER TABLE HEL_REPRO ADD (
  CONSTRAINT HEL_EXPTIP_REPRO_FK 
 FOREIGN KEY (EXPTIP_ID) 
 REFERENCES HEL_EXPEDIENT_TIPUS (ID));
ALTER TABLE JBPM_ACTION ADD (
  CONSTRAINT FK_ACTION_EVENT 
 FOREIGN KEY (EVENT_) 
 REFERENCES JBPM_EVENT (ID_),
  CONSTRAINT FK_ACTION_EXPTHDL 
 FOREIGN KEY (EXCEPTIONHANDLER_) 
 REFERENCES JBPM_EXCEPTIONHANDLER (ID_),
  CONSTRAINT FK_ACTION_PROCDEF 
 FOREIGN KEY (PROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_),
  CONSTRAINT FK_CRTETIMERACT_TA 
 FOREIGN KEY (TIMERACTION_) 
 REFERENCES JBPM_ACTION (ID_),
  CONSTRAINT FK_ACTION_ACTNDEL 
 FOREIGN KEY (ACTIONDELEGATION_) 
 REFERENCES JBPM_DELEGATION (ID_),
  CONSTRAINT FK_ACTION_REFACT 
 FOREIGN KEY (REFERENCEDACTION_) 
 REFERENCES JBPM_ACTION (ID_));

ALTER TABLE JBPM_BYTEARRAY ADD (
  CONSTRAINT FK_BYTEARR_FILDEF 
 FOREIGN KEY (FILEDEFINITION_) 
 REFERENCES JBPM_MODULEDEFINITION (ID_));

ALTER TABLE JBPM_BYTEBLOCK ADD (
  CONSTRAINT FK_BYTEBLOCK_FILE 
 FOREIGN KEY (PROCESSFILE_) 
 REFERENCES JBPM_BYTEARRAY (ID_));

ALTER TABLE JBPM_COMMENT ADD (
  CONSTRAINT FK_COMMENT_TOKEN 
 FOREIGN KEY (TOKEN_) 
 REFERENCES JBPM_TOKEN (ID_),
  CONSTRAINT FK_COMMENT_TSK 
 FOREIGN KEY (TASKINSTANCE_) 
 REFERENCES JBPM_TASKINSTANCE (ID_));

ALTER TABLE JBPM_DECISIONCONDITIONS ADD (
  CONSTRAINT FK_DECCOND_DEC 
 FOREIGN KEY (DECISION_) 
 REFERENCES JBPM_NODE (ID_));

ALTER TABLE JBPM_DELEGATION ADD (
  CONSTRAINT FK_DELEGATION_PRCD 
 FOREIGN KEY (PROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_));

ALTER TABLE JBPM_EVENT ADD (
  CONSTRAINT FK_EVENT_PROCDEF 
 FOREIGN KEY (PROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_),
  CONSTRAINT FK_EVENT_NODE 
 FOREIGN KEY (NODE_) 
 REFERENCES JBPM_NODE (ID_),
  CONSTRAINT FK_EVENT_TRANS 
 FOREIGN KEY (TRANSITION_) 
 REFERENCES JBPM_TRANSITION (ID_),
  CONSTRAINT FK_EVENT_TASK 
 FOREIGN KEY (TASK_) 
 REFERENCES JBPM_TASK (ID_));

ALTER TABLE JBPM_ID_GROUP ADD (
  CONSTRAINT FK_ID_GRP_PARENT 
 FOREIGN KEY (PARENT_) 
 REFERENCES JBPM_ID_GROUP (ID_));

ALTER TABLE JBPM_ID_MEMBERSHIP ADD (
  CONSTRAINT FK_ID_MEMSHIP_GRP 
 FOREIGN KEY (GROUP_) 
 REFERENCES JBPM_ID_GROUP (ID_),
  CONSTRAINT FK_ID_MEMSHIP_USR 
 FOREIGN KEY (USER_) 
 REFERENCES JBPM_ID_USER (ID_));

ALTER TABLE JBPM_JOB ADD (
  CONSTRAINT FK_JOB_TOKEN 
 FOREIGN KEY (TOKEN_) 
 REFERENCES JBPM_TOKEN (ID_),
  CONSTRAINT FK_JOB_NODE 
 FOREIGN KEY (NODE_) 
 REFERENCES JBPM_NODE (ID_),
  CONSTRAINT FK_JOB_PRINST 
 FOREIGN KEY (PROCESSINSTANCE_) 
 REFERENCES JBPM_PROCESSINSTANCE (ID_),
  CONSTRAINT FK_JOB_ACTION 
 FOREIGN KEY (ACTION_) 
 REFERENCES JBPM_ACTION (ID_),
  CONSTRAINT FK_JOB_TSKINST 
 FOREIGN KEY (TASKINSTANCE_) 
 REFERENCES JBPM_TASKINSTANCE (ID_));

ALTER TABLE JBPM_LOG ADD (
  CONSTRAINT FK_LOG_SOURCENODE 
 FOREIGN KEY (SOURCENODE_) 
 REFERENCES JBPM_NODE (ID_),
  CONSTRAINT FK_LOG_TOKEN 
 FOREIGN KEY (TOKEN_) 
 REFERENCES JBPM_TOKEN (ID_),
  CONSTRAINT FK_LOG_OLDBYTES 
 FOREIGN KEY (OLDBYTEARRAY_) 
 REFERENCES JBPM_BYTEARRAY (ID_),
  CONSTRAINT FK_LOG_NEWBYTES 
 FOREIGN KEY (NEWBYTEARRAY_) 
 REFERENCES JBPM_BYTEARRAY (ID_),
  CONSTRAINT FK_LOG_CHILDTOKEN 
 FOREIGN KEY (CHILD_) 
 REFERENCES JBPM_TOKEN (ID_),
  CONSTRAINT FK_LOG_DESTNODE 
 FOREIGN KEY (DESTINATIONNODE_) 
 REFERENCES JBPM_NODE (ID_),
  CONSTRAINT FK_LOG_TASKINST 
 FOREIGN KEY (TASKINSTANCE_) 
 REFERENCES JBPM_TASKINSTANCE (ID_),
  CONSTRAINT FK_LOG_SWIMINST 
 FOREIGN KEY (SWIMLANEINSTANCE_) 
 REFERENCES JBPM_SWIMLANEINSTANCE (ID_),
  CONSTRAINT FK_LOG_PARENT 
 FOREIGN KEY (PARENT_) 
 REFERENCES JBPM_LOG (ID_),
  CONSTRAINT FK_LOG_NODE 
 FOREIGN KEY (NODE_) 
 REFERENCES JBPM_NODE (ID_),
  CONSTRAINT FK_LOG_ACTION 
 FOREIGN KEY (ACTION_) 
 REFERENCES JBPM_ACTION (ID_),
  CONSTRAINT FK_LOG_VARINST 
 FOREIGN KEY (VARIABLEINSTANCE_) 
 REFERENCES JBPM_VARIABLEINSTANCE (ID_),
  CONSTRAINT FK_LOG_TRANSITION 
 FOREIGN KEY (TRANSITION_) 
 REFERENCES JBPM_TRANSITION (ID_));

ALTER TABLE JBPM_MODULEDEFINITION ADD (
  CONSTRAINT FK_TSKDEF_START 
 FOREIGN KEY (STARTTASK_) 
 REFERENCES JBPM_TASK (ID_),
  CONSTRAINT FK_MODDEF_PROCDEF 
 FOREIGN KEY (PROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_));

ALTER TABLE JBPM_MODULEINSTANCE ADD (
  CONSTRAINT FK_TASKMGTINST_TMD 
 FOREIGN KEY (TASKMGMTDEFINITION_) 
 REFERENCES JBPM_MODULEDEFINITION (ID_),
  CONSTRAINT FK_MODINST_PRCINST 
 FOREIGN KEY (PROCESSINSTANCE_) 
 REFERENCES JBPM_PROCESSINSTANCE (ID_));

ALTER TABLE JBPM_NODE ADD (
  CONSTRAINT FK_PROCST_SBPRCDEF 
 FOREIGN KEY (SUBPROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_),
  CONSTRAINT FK_NODE_PROCDEF 
 FOREIGN KEY (PROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_),
  CONSTRAINT FK_NODE_SCRIPT 
 FOREIGN KEY (SCRIPT_) 
 REFERENCES JBPM_ACTION (ID_),
  CONSTRAINT FK_NODE_ACTION 
 FOREIGN KEY (ACTION_) 
 REFERENCES JBPM_ACTION (ID_),
  CONSTRAINT FK_DECISION_DELEG 
 FOREIGN KEY (DECISIONDELEGATION) 
 REFERENCES JBPM_DELEGATION (ID_),
  CONSTRAINT FK_NODE_SUPERSTATE 
 FOREIGN KEY (SUPERSTATE_) 
 REFERENCES JBPM_NODE (ID_));

ALTER TABLE JBPM_POOLEDACTOR ADD (
  CONSTRAINT FK_POOLEDACTOR_SLI 
 FOREIGN KEY (SWIMLANEINSTANCE_) 
 REFERENCES JBPM_SWIMLANEINSTANCE (ID_));

ALTER TABLE JBPM_PROCESSDEFINITION ADD (
  CONSTRAINT FK_PROCDEF_STRTSTA 
 FOREIGN KEY (STARTSTATE_) 
 REFERENCES JBPM_NODE (ID_));

ALTER TABLE JBPM_PROCESSINSTANCE ADD (
  CONSTRAINT FK_PROCIN_PROCDEF 
 FOREIGN KEY (PROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_),
  CONSTRAINT FK_PROCIN_ROOTTKN 
 FOREIGN KEY (ROOTTOKEN_) 
 REFERENCES JBPM_TOKEN (ID_),
  CONSTRAINT FK_PROCIN_SPROCTKN 
 FOREIGN KEY (SUPERPROCESSTOKEN_) 
 REFERENCES JBPM_TOKEN (ID_));

ALTER TABLE JBPM_RUNTIMEACTION ADD (
  CONSTRAINT FK_RTACTN_PROCINST 
 FOREIGN KEY (PROCESSINSTANCE_) 
 REFERENCES JBPM_PROCESSINSTANCE (ID_),
  CONSTRAINT FK_RTACTN_ACTION 
 FOREIGN KEY (ACTION_) 
 REFERENCES JBPM_ACTION (ID_));

ALTER TABLE JBPM_SWIMLANE ADD (
  CONSTRAINT FK_SWL_ASSDEL 
 FOREIGN KEY (ASSIGNMENTDELEGATION_) 
 REFERENCES JBPM_DELEGATION (ID_)
 ON DELETE CASCADE,
  CONSTRAINT FK_SWL_TSKMGMTDEF 
 FOREIGN KEY (TASKMGMTDEFINITION_) 
 REFERENCES JBPM_MODULEDEFINITION (ID_));

ALTER TABLE JBPM_SWIMLANEINSTANCE ADD (
  CONSTRAINT FK_SWIMLANEINST_TM 
 FOREIGN KEY (TASKMGMTINSTANCE_) 
 REFERENCES JBPM_MODULEINSTANCE (ID_),
  CONSTRAINT FK_SWIMLANEINST_SL 
 FOREIGN KEY (SWIMLANE_) 
 REFERENCES JBPM_SWIMLANE (ID_));

ALTER TABLE JBPM_TASK ADD (
  CONSTRAINT FK_TSK_TSKCTRL 
 FOREIGN KEY (TASKCONTROLLER_) 
 REFERENCES JBPM_TASKCONTROLLER (ID_),
  CONSTRAINT FK_TASK_ASSDEL 
 FOREIGN KEY (ASSIGNMENTDELEGATION_) 
 REFERENCES JBPM_DELEGATION (ID_),
  CONSTRAINT FK_TASK_TASKNODE 
 FOREIGN KEY (TASKNODE_) 
 REFERENCES JBPM_NODE (ID_),
  CONSTRAINT FK_TASK_PROCDEF 
 FOREIGN KEY (PROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_),
  CONSTRAINT FK_TASK_STARTST 
 FOREIGN KEY (STARTSTATE_) 
 REFERENCES JBPM_NODE (ID_),
  CONSTRAINT FK_TASK_TASKMGTDEF 
 FOREIGN KEY (TASKMGMTDEFINITION_) 
 REFERENCES JBPM_MODULEDEFINITION (ID_),
  CONSTRAINT FK_TASK_SWIMLANE 
 FOREIGN KEY (SWIMLANE_) 
 REFERENCES JBPM_SWIMLANE (ID_));

ALTER TABLE JBPM_TASKACTORPOOL ADD (
  CONSTRAINT FK_TSKACTPOL_PLACT 
 FOREIGN KEY (POOLEDACTOR_) 
 REFERENCES JBPM_POOLEDACTOR (ID_),
  CONSTRAINT FK_TASKACTPL_TSKI 
 FOREIGN KEY (TASKINSTANCE_) 
 REFERENCES JBPM_TASKINSTANCE (ID_));

ALTER TABLE JBPM_TASKCONTROLLER ADD (
  CONSTRAINT FK_TSKCTRL_DELEG 
 FOREIGN KEY (TASKCONTROLLERDELEGATION_) 
 REFERENCES JBPM_DELEGATION (ID_));

ALTER TABLE JBPM_TASKINSTANCE ADD (
  CONSTRAINT FK_TSKINS_PRCINS 
 FOREIGN KEY (PROCINST_) 
 REFERENCES JBPM_PROCESSINSTANCE (ID_),
  CONSTRAINT FK_TASKINST_TMINST 
 FOREIGN KEY (TASKMGMTINSTANCE_) 
 REFERENCES JBPM_MODULEINSTANCE (ID_),
  CONSTRAINT FK_TASKINST_TOKEN 
 FOREIGN KEY (TOKEN_) 
 REFERENCES JBPM_TOKEN (ID_),
  CONSTRAINT FK_TASKINST_SLINST 
 FOREIGN KEY (SWIMLANINSTANCE_) 
 REFERENCES JBPM_SWIMLANEINSTANCE (ID_),
  CONSTRAINT FK_TASKINST_TASK 
 FOREIGN KEY (TASK_) 
 REFERENCES JBPM_TASK (ID_));

ALTER TABLE JBPM_TOKEN ADD (
  CONSTRAINT FK_TOKEN_PARENT 
 FOREIGN KEY (PARENT_) 
 REFERENCES JBPM_TOKEN (ID_),
  CONSTRAINT FK_TOKEN_NODE 
 FOREIGN KEY (NODE_) 
 REFERENCES JBPM_NODE (ID_),
  CONSTRAINT FK_TOKEN_PROCINST 
 FOREIGN KEY (PROCESSINSTANCE_) 
 REFERENCES JBPM_PROCESSINSTANCE (ID_),
  CONSTRAINT FK_TOKEN_SUBPI 
 FOREIGN KEY (SUBPROCESSINSTANCE_) 
 REFERENCES JBPM_PROCESSINSTANCE (ID_));

ALTER TABLE JBPM_TOKENVARIABLEMAP ADD (
  CONSTRAINT FK_TKVARMAP_CTXT 
 FOREIGN KEY (CONTEXTINSTANCE_) 
 REFERENCES JBPM_MODULEINSTANCE (ID_),
  CONSTRAINT FK_TKVARMAP_TOKEN 
 FOREIGN KEY (TOKEN_) 
 REFERENCES JBPM_TOKEN (ID_));

ALTER TABLE JBPM_TRANSITION ADD (
  CONSTRAINT FK_TRANSITION_TO 
 FOREIGN KEY (TO_) 
 REFERENCES JBPM_NODE (ID_),
  CONSTRAINT FK_TRANS_PROCDEF 
 FOREIGN KEY (PROCESSDEFINITION_) 
 REFERENCES JBPM_PROCESSDEFINITION (ID_),
  CONSTRAINT FK_TRANSITION_FROM 
 FOREIGN KEY (FROM_) 
 REFERENCES JBPM_NODE (ID_));

ALTER TABLE JBPM_VARIABLEACCESS ADD (
  CONSTRAINT FK_VARACC_TSKCTRL 
 FOREIGN KEY (TASKCONTROLLER_) 
 REFERENCES JBPM_TASKCONTROLLER (ID_),
  CONSTRAINT FK_VARACC_SCRIPT 
 FOREIGN KEY (SCRIPT_) 
 REFERENCES JBPM_ACTION (ID_),
  CONSTRAINT FK_VARACC_PROCST 
 FOREIGN KEY (PROCESSSTATE_) 
 REFERENCES JBPM_NODE (ID_));

ALTER TABLE JBPM_VARIABLEINSTANCE ADD (
  CONSTRAINT FK_VARINST_TK 
 FOREIGN KEY (TOKEN_) 
 REFERENCES JBPM_TOKEN (ID_),
  CONSTRAINT FK_VARINST_TKVARMP 
 FOREIGN KEY (TOKENVARIABLEMAP_) 
 REFERENCES JBPM_TOKENVARIABLEMAP (ID_),
  CONSTRAINT FK_VARINST_PRCINST 
 FOREIGN KEY (PROCESSINSTANCE_) 
 REFERENCES JBPM_PROCESSINSTANCE (ID_),
  CONSTRAINT FK_VAR_TSKINST 
 FOREIGN KEY (TASKINSTANCE_) 
 REFERENCES JBPM_TASKINSTANCE (ID_),
  CONSTRAINT FK_BYTEINST_ARRAY 
 FOREIGN KEY (BYTEARRAYVALUE_) 
 REFERENCES JBPM_BYTEARRAY (ID_));
 
 ALTER TABLE HEL_DOCUMENT_NOTIFICACIO ADD (
	CONSTRAINT HEL_EXPEDIENT_DOCNOT_FK FOREIGN KEY (EXPEDIENT_ID)
	REFERENCES HEL_EXPEDIENT (ID));
 
ALTER TABLE HEL_DOCUMENT_NOTIFICACIO ADD (PRIMARY KEY (ID));
ALTER TABLE HEL_DOCUMENT_NOTIFICACIO ADD (
	CONSTRAINT HEL_DOCUMENT_DOCNOTIF_FK FOREIGN KEY (DOCUMENT_STORE_ID) 
 	REFERENCES HEL_DOCUMENT_STORE (ID));
 	
 ALTER TABLE HEL_DOCUMENT_NOTIFICACIO ADD (
	CONSTRAINT HEL_CERTIFICACIO_NOTIF_FK FOREIGN KEY (CERTIFICACIO_STORE_ID) 
 	REFERENCES HEL_DOCUMENT_STORE (ID));
 
 
-- View Log per a la taula JBPM_TASKINSTANCE
CREATE MATERIALIZED VIEW LOG ON JBPM_TASKINSTANCE WITH PRIMARY KEY;

-- Materialized View de la taula JBPM_TASKINSTANCE
-- Atenció! Necessita permisos especials
CREATE MATERIALIZED VIEW MV_JBPM_TASKINSTANCE 
NOLOGGING
REFRESH FAST ON COMMIT AS
  SELECT * FROM JBPM_TASKINSTANCE WHERE ISSUSPENDED_ = 0 AND ISOPEN_ = 1;

-- Index per a consulta d'operaicons massives pendents --
CREATE INDEX HEL_EXMASEXP_EXEMAS_I ON HEL_EXEC_MASEXP (EXECMAS_ID);

-- Index per a swimlaneinstance de jbpm --
CREATE INDEX JBPM_SWIMLANEINSTANCE_I ON JBPM_SWIMLANEINSTANCE (TASKMGMTINSTANCE_);


 --------------------------------------------------------
-- Triggers de la lista de control d'accès
--------------------------------------------------------
CREATE OR REPLACE TRIGGER "HEL_ACL_CLASS_ID"
BEFORE INSERT ON HEL_ACL_CLASS
FOR EACH ROW
  BEGIN
    SELECT HEL_ACL_CLASS_SEQ.NEXTVAL INTO :new.id FROM dual;
  END;
/
 
CREATE OR REPLACE TRIGGER "HEL_ACL_ENTRY_ID"
BEFORE INSERT ON HEL_ACL_ENTRY
FOR EACH ROW
  BEGIN
    SELECT HEL_ACL_ENTRY_SEQ.NEXTVAL INTO :new.id FROM dual;
  END;
/
 
CREATE OR REPLACE TRIGGER "HEL_ACL_OBJECT_IDENTITY_ID"
BEFORE INSERT ON HEL_ACL_OBJECT_IDENTITY
FOR EACH ROW
  BEGIN
    SELECT HEL_ACL_OBJECT_IDENTITY_SEQ.NEXTVAL INTO :new.id FROM dual;
  END;
/
 
CREATE OR REPLACE TRIGGER "HEL_ACL_SID_ID"
BEFORE INSERT ON HEL_ACL_SID
FOR EACH ROW
  BEGIN
    SELECT HEL_ACL_SID_SEQ.NEXTVAL INTO :new.id FROM dual;
  END;
/