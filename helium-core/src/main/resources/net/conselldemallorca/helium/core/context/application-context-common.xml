<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
		http://www.springframework.org/schema/cache
		http://www.springframework.org/schema/cache/spring-cache-3.1.xsd"
	default-autowire="byName">

	<bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="${es.caib.helium.properties.path}"/>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="valueSeparator" value="?" />
	</bean>

	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:net/conselldemallorca/helium/webapp/i18n/messages</value>
				<value>classpath:net/conselldemallorca/helium/webapp/i18n/messages_v3</value>
				<value>classpath:net/conselldemallorca/helium/webapp/i18n/errors</value>
				<value>classpath:net/conselldemallorca/helium/webapp/i18n/displaytag</value>
			</list>
		</property>
	</bean>

	<!-- >aop:aspectj-autoproxy/-->

	<context:annotation-config/>

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="resourceRef" value="true"/>
		<property name="jndiName" value="jdbc/HeliumDS"/>
	</bean>

	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" lazy-init="true"/>

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				 <value>net.conselldemallorca.helium.core.model.hibernate</value>
				 <value>net.conselldemallorca.helium.core.security.acl</value>
				 <value>net.conselldemallorca.helium.core.security.audit</value>
				 <value>net.conselldemallorca.helium.core.model.update</value>
			</list>
		</property>
		<property name="mappingResources">
			<list>
				<value>hibernate.identity.hbm.xml</value>
			</list>
		</property>
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${app.hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${app.hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${app.hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.ejb.cfgfile">/net/conselldemallorca/helium/core/context/jbpm3.hibernate.cfg.xml</prop>
				<prop key="hibernate.generate_statistics">${app.hibernate.generate_statistics?false}</prop>
			</props>
		</property>
	</bean>
	<bean id="sessionFactory" factory-bean="entityManagerFactory" factory-method="getSessionFactory"/>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>

	<bean id="incidentThrowsAdvice" class="net.conselldemallorca.helium.core.model.exception.IncidentThrowsAdviceHelper"/>	
	<aop:config>
		<aop:pointcut id="serviceOperationCommon" expression="execution(* net.conselldemallorca.helium.core.model.service.*Service.*(..))"/>
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="serviceOperationCommon" />
		<aop:aspect id="afterThrowingAdvice" ref="incidentThrowsAdvice">
			<aop:before method="before" pointcut="execution(* net.conselldemallorca.helium.core.model.service.*Service*.*(..)) 
												|| execution(* net.conselldemallorca.helium.v3.core.service.*Service*.*(..)) 
												|| execution(* net.conselldemallorca.helium.jbpm3.spring.SpringJobExecutorThread.executeJob(..))" />
			<aop:after-throwing method="afterThrowing" throwing="e" pointcut="execution(* net.conselldemallorca.helium.core.model.service.*Service*.*(..)) 
												|| execution(* net.conselldemallorca.helium.v3.core.service.*Service*.*(..))" />
			<aop:after-returning method="after" pointcut="execution(* net.conselldemallorca.helium.core.model.service.*Service*.*(..)) 
												|| execution(* net.conselldemallorca.helium.v3.core.service.*Service*.*(..)) 
												|| execution(* net.conselldemallorca.helium.jbpm3.spring.SpringJobExecutorThread.executeJob(..))" />			
		</aop:aspect>
	</aop:config>
	
	<bean id="actionLogger" class="net.conselldemallorca.helium.core.security.audit.HibernateActionLogger" lazy-init="true">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>

	<bean id="passwordDigester" class="net.conselldemallorca.helium.core.util.PasswordDigester">
		<constructor-arg value="MD5"/>
	</bean>

	<bean class="net.conselldemallorca.helium.core.model.update.Updater"/>

	<bean id="serviceProxy" class="net.conselldemallorca.helium.core.model.service.ServiceProxy" factory-method="getInstance"/>
<!-- 	<bean id="daoProxy" class="net.conselldemallorca.helium.core.model.dao.DaoProxy" factory-method="getInstance"/> -->

	<!--bean id="globalProperties" class="net.conselldemallorca.helium.core.util.GlobalProperties">
		<constructor-arg value="${es.caib.helium.properties.path}"/>
	</bean-->

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="session">
			<bean id="mailSession" class="org.springframework.jndi.JndiObjectFactoryBean">
				<property name="resourceRef" value="true"/>
				<property name="jndiName" value="mail/HeliumSession"/>
			</bean>
		</property>
	</bean>

	<cache:annotation-driven />
	<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:net/conselldemallorca/helium/core/context/ehcache.xml"/>
		<property name="shared" value="true"/>
	</bean>
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehcache"/>
	</bean>
	<!--bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
		<property name="caches">
			<set>
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
					<property name="name" value="dominiCache"/>
				</bean>
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
					<property name="name" value="alertaCache"/>
				</bean>
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
					<property name="name" value="consultaCache"/>
				</bean>
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
					<property name="name" value="entornsUsuariActual"/>
				</bean>
				<bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean">
					<property name="name" value="personaPluginV26Cache"/>
				</bean>
			</set>
		</property>
	</bean-->

</beans>
