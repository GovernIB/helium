version: '3.8'
services:

  elasticsearch:
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.11.1'
    ports:
      - '9200:9200'
    environment:
      discovery.type: single-node
    volumes:
      - 'esdata:/usr/share/elasticsearch/data'
    networks:
      - heliumMS

  kibana:
    image: 'docker.elastic.co/kibana/kibana:7.11.1'
    ports:
      - '5601:5601'
    restart: on-failure
    depends_on:
      - elasticsearch
    networks:
      - heliumMS

  filebeat:
    image: 'docker.elastic.co/beats/filebeat:7.11.1'
    volumes:
      - './filebeat/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro'
      - '/var/lib/docker/containers:/var/lib/docker/containers:ro'
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    user: root
    restart: on-failure
    networks:
      - heliumMS

  jms:
    image: vromero/activemq-artemis
    ports:
      - '8161:8161'
      - '61616:61616'
    networks:
      - heliumMS

  mongo1:
    image: mongo
    container_name: mongo1
    command: [ "--replSet", "rs0", "--dbpath", "/data/db", "--bind_ip_all" ]
    ports:
      - "30001:27017"
    volumes:
      - /mongo/data1/db:/data/db
      - /mongo/data1/configdb:/data/configdb
    networks:
      - heliumMS

  mongo2:
    image: mongo
    container_name: mongo2
    command: [ "--replSet", "rs0", "--dbpath", "/data/db", "--bind_ip_all" ]
    ports:
      - "30002:27017"
    volumes:
      - /mongo/data2/db:/data/db
      - /mongo/data2/configdb:/data/configdb
    networks:
      - heliumMS

  mongo3:
    image: mongo
    container_name: mongo3
    command: [ "--replSet", "rs0", "--dbpath", "/data/db", "--bind_ip_all" ]
    ports:
      - "30003:27017"
    volumes:
      - /mongo/data3/db:/data/db
      - /mongo/data3/configdb:/data/configdb
    networks:
      - heliumMS

  mongo-config:
    image: mongo
    networks:
      - heliumMS
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    volumes:
      - ./scripts:/scripts
    entrypoint: [ '/scripts/mongo-setup.sh' ]

  zipkin:
    image: openzipkin/zipkin
    ports:
      - '9411:9411'
    networks:
      - heliumMS

  helium-eureka:
    image: mshelium/helium-eureka
    ports:
      - '8761:8761'
    networks:
      - heliumMS

  helium-config-service:
    image: mshelium/heliium-config-server
    ports:
      - '8888:8888'
    depends_on:
      - helium-eureka
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: 'http://helium:H3lEurek4@helium-eureka:8761/eureka/'
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: 'true'
    networks:
      - heliumMS

  helium-domini-service:
    image: mshelium/helium-domini-service
    ports:
      - '8082:8082'
    depends_on:
      - helium-eureka
      - helium-config-service
    environment:
      eureka.client.service-url.defaultZone: 'http://helium:H3lEurek4@helium-eureka:8761/eureka'
      SPRING_PROFILES_ACTIVE: compose
      spring.zipkin.enabled: 'true'
      spring.zipkin.base-url: 'http://zipkin:9411/'
      SPRING_DATASOURCE_URL: 'jdbc:oracle:thin:@//${DOCKER_GATEWAY_HOST:-host.docker.internal}:49161/xe'
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: 'true'
    restart: on-failure
    labels:
      collect_logs_with_filebeat: 'true'
      decode_log_event_to_json_object: 'true'
    networks:
      - heliumMS

  helium-dada-service:
    image: mshelium/helium-dada-service
    ports:
      - '8083:8080'
    depends_on:
      - helium-eureka
      - helium-config-service
      - mongo1
    environment:
      eureka.client.service-url.defaultZone: 'http://helium:H3lEurek4@helium-eureka:8761/eureka'
      SPRING_PROFILES_ACTIVE: compose
      spring.zipkin.enabled: 'true'
      spring.zipkin.base-url: 'http://zipkin:9411/'
      SPRING_DATA_MONGODB_URI: 'mongodb://mongodb1:30001/hel_dada'
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: 'true'
    restart: on-failure
    labels:
      collect_logs_with_filebeat: 'true'
      decode_log_event_to_json_object: 'true'
    networks:
      - heliumMS

volumes:
  esdata:
    driver: local

networks:
  heliumMS:
    driver: bridge
