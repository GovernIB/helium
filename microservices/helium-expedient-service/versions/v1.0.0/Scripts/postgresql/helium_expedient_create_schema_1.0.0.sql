-- Llistat amb la informació pel llistat d'expedients
CREATE TABLE HEL_EXPEDIENT
(
    ID                  BIGINT                NOT NULL,
    ENTORN_ID           BIGINT                NOT NULL,
    EXPEDIENT_TIPUS_ID  BIGINT                NOT NULL,
    PROCESS_INSTANCE_ID VARCHAR(255)          NOT NULL,
    NUMERO              VARCHAR(64)           NOT NULL,
    NUMERO_DEFAULT      VARCHAR(64)           NOT NULL,
    TITOL               VARCHAR(255),
    DATA_INICI          TIMESTAMP(6)          NOT NULL,
    DATA_FI             TIMESTAMP(6),
    ESTAT_TIPUS         VARCHAR(16)           NOT NULL,
    ESTAT_ID            BIGINT,
  	ATURAT              BOOLEAN               NOT NULL DEFAULT false,
    INFO_ATURAT         VARCHAR(1024),
  	ANULAT              BOOLEAN               NOT NULL DEFAULT false,
    COMENTARI_ANULAT    VARCHAR(255),
    ALERTES_TOTALS      BIGINT                NOT NULL DEFAULT 0,
    ALERTES_PENDENTS    BIGINT                NOT NULL DEFAULT 0,
  	AMB_ERRORS          BOOLEAN               NOT NULL DEFAULT false
);

ALTER TABLE HEL_EXPEDIENT ADD CONSTRAINT HEL_EXPEDIENT_PK PRIMARY KEY (ID);
CREATE INDEX HEL_EXPEDIENT_EXPTIP_I ON HEL_EXPEDIENT (EXPEDIENT_TIPUS_ID);
CREATE INDEX HEL_EXPEDIENT_ENTORN_I ON HEL_EXPEDIENT (ENTORN_ID);

-- Llistat amb la informació dels processos
CREATE TABLE HEL_PROCES
(
    ID                  BIGINT          NOT NULL,
    EXPEDIENT_ID        BIGINT,
    MOTOR               VARCHAR(64)     NOT NULL,
    PROCES_ID           VARCHAR(64)     NOT NULL,
    PROCES_ARREL_ID     BIGINT          NOT NULL,
    PROCES_PARE_ID      BIGINT,
    PROCESSDEFINITION   VARCHAR(64)     NOT NULL,
    DESCRIPCIO          VARCHAR(255),
    DATA_INICI          TIMESTAMP(6)    NOT NULL,
    DATA_FI             TIMESTAMP(6),
    SUSPES              BOOLEAN         NOT NULL DEFAULT false
);

ALTER TABLE HEL_PROCES ADD (CONSTRAINT HEL_PROCES_PK PRIMARY KEY (ID));
CREATE INDEX HEL_PROCES_EXP_I ON HEL_PROCES (EXPEDIENT_ID);
ALTER TABLE HEL_PROCES ADD (CONSTRAINT HEL_PROCES_EXP_FK FOREIGN KEY (EXPEDIENT_ID) REFERENCES HEL_EXPEDIENT (ID));
ALTER TABLE HEL_PROCES ADD (CONSTRAINT HEL_PROCES_ARREL_FK FOREIGN KEY (PROCES_ARREL_ID) REFERENCES HEL_PROCES (ID));
ALTER TABLE HEL_PROCES ADD (CONSTRAINT HEL_PROCES_PARE_FK FOREIGN KEY (PROCES_PARE_ID) REFERENCES HEL_PROCES (ID));

ALTER TABLE HEL_PROCES ADD (CONSTRAINT HEL_PROCES_UK UNIQUE (MOTOR, PROCES_ID));


-- Llistat amb la informació pel llistat de tasques
CREATE TABLE HEL_TASCA
(
    ID                  BIGINT                NOT NULL,
    PROCES_ID           VARCHAR(64)           NOT NULL,
    TASCA_ID            VARCHAR(64)           NOT NULL,
    NOM                 VARCHAR(255)          NOT NULL,
    TITOL               VARCHAR(255)          NOT NULL,
    AGAFADA             BOOLEAN               NOT NULL DEFAULT false,
    CANCELADA           BOOLEAN               NOT NULL DEFAULT false,
    SUSPESA             BOOLEAN               NOT NULL DEFAULT false,
    COMPLETADA          BOOLEAN               NOT NULL DEFAULT false,
    ASSIGNADA           BOOLEAN               NOT NULL DEFAULT false,
    MARCADA_FINALITZAR  TIMESTAMP(6)               NOT NULL DEFAULT false,
    ERROR_FINALITZACIO  VARCHAR(1000),
    DATA_FINS           TIMESTAMP(6),
    DATA_FI				TIMESTAMP(6),
   	INICI_FINALITZACIO  TIMESTAMP(6),
    DATA_CREACIO        TIMESTAMP(6)          NOT NULL,
    USUARI_ASSIGNAT     VARCHAR(255),
    PRIORITAT           INTEGER               NOT NULL DEFAULT 3
);

ALTER TABLE HEL_TASCA ADD CONSTRAINT HEL_TASCA_PK PRIMARY KEY (ID);
ALTER TABLE ONLY HEL_TASCA ADD CONSTRAINT HEL_TASCA_PROC_FK FOREIGN KEY (PROCES_ID) REFERENCES HEL_PROCES (ID);
CREATE INDEX HEL_TASCA_PROCES_I ON HEL_TASCA (PROCES_ID);

-- Taula d'usuaris responsables assignats a la tasca
CREATE TABLE HEL_RESPONSABLE
(
  ID                   BIGINT                          NOT NULL,
  TASCA_ID             BIGINT                          NOT NULL,
  USUARI_CODI          character varying(255)          NOT NULL
);

ALTER TABLE HEL_RESPONSABLE ADD CONSTRAINT HEL_RESPONSABLE_PK PRIMARY KEY (ID);
CREATE INDEX HEL_RESP_TASCA_I ON HEL_RESPONSABLE (TASCA_ID);
ALTER TABLE ONLY HEL_RESPONSABLE ADD CONSTRAINT HEL_RESP_UK UNIQUE (TASCA_ID, USUARI_CODI);

ALTER TABLE ONLY HEL_RESPONSABLE ADD CONSTRAINT HEL_RESP_TASCA_FK FOREIGN KEY (TASCA_ID) REFERENCES HEL_TASCA (ID);


-- Taula de grups assignats a una tasca
CREATE TABLE HEL_GRUP
(
  ID                   BIGINT                          NOT NULL,
  TASCA_ID             BIGINT                          NOT NULL,
  GRUP_CODI            character varying(255)          NOT NULL
);

ALTER TABLE HEL_GRUP ADD (CONSTRAINT HEL_GRUP_PK PRIMARY KEY (ID));
CREATE INDEX HEL_GRUP_TASCA_I ON HEL_GRUP (TASCA_ID);
ALTER TABLE HEL_GRUP ADD (CONSTRAINT HEL_GRUP_TASCA_FK FOREIGN KEY (TASCA_ID) REFERENCES HEL_TASCA (ID));

ALTER TABLE HEL_GRUP ADD (CONSTRAINT HEL_GRUP_UK UNIQUE (TASCA_ID, GRUP_CODI));


CREATE SEQUENCE HEL_PROCES_SEQ START WITH 10000000;
CREATE SEQUENCE HEL_TASCA_SEQ START WITH 10000000;
CREATE SEQUENCE HEL_RESPONSABLE_SEQ START WITH 10000000;
CREATE SEQUENCE HEL_GRUP_SEQ START WITH 10000000;

GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_EXPEDIENT TO HELIUM_MS_EXPEDIENT;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_PROCES TO HELIUM_MS_EXPEDIENT;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_TASCA TO HELIUM_MS_EXPEDIENT;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_RESPONSABLE TO HELIUM_MS_EXPEDIENT;
GRANT SELECT, UPDATE, INSERT, DELETE ON HEL_GRUP TO HELIUM_MS_EXPEDIENT;
GRANT SELECT ON HEL_PROCES_SEQ TO HELIUM_MS_EXPEDIENT;
GRANT SELECT ON HEL_TASCA_SEQ TO HELIUM_MS_EXPEDIENT;
GRANT SELECT ON HEL_RESPONSABLE_SEQ TO HELIUM_MS_EXPEDIENT;
GRANT SELECT ON HEL_GRUP_SEQ TO HELIUM_MS_EXPEDIENT;

