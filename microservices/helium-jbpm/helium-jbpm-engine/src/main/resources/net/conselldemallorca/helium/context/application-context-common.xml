<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-2.5.xsd"
	default-autowire="byName">

	<bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="${es.caib.helium.properties.path}"/>
		<property name="placeholderPrefix" value="${config:" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
		<property name="valueSeparator" value="?" />
	</bean>

	<context:annotation-config/>

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="resourceRef" value="true"/>
		<property name="jndiName" value="${config:es.caib.helium-jbpm.datasource.jndi}"/>
	</bean>

	<bean id="lobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" lazy-init="true"/>

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingResources">
			<list>
				<value>hibernate.identity.hbm.xml</value>
			</list>
		</property>
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${config:es.caib.helium-jbpm.hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${config:es.caib.helium-jbpm.hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${config:es.caib.helium-jbpm.hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.ejb.cfgfile">/es/caib/helium/context/jbpm3.hibernate.cfg.xml</prop>
				<prop key="hibernate.generate_statistics">${config:es.caib.helium-jbpm.hibernate.generate_statistics?false}</prop>
			</props>
		</property>
	</bean>
	<bean id="sessionFactory" factory-bean="entityManagerFactory" factory-method="getSessionFactory"/>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<constructor-arg>
			<bean class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
				<property name="readTimeout" value="${config:es.caib.helium-jbpm.rest.readTimeout?10000}" />
				<property name="connectTimeout" value="${config:es.caib.helium-jbpm.rest.connectionTimeout?300000}" />
			</bean>
		</constructor-arg>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager"/>
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>

  	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="session">
			<bean id="mailSession" class="org.springframework.jndi.JndiObjectFactoryBean">
				<property name="resourceRef" value="true"/>
				<property name="jndiName" value="${config:es.caib.helium-jbpm.mail.jndi}"/>
			</bean>
		</property>
	</bean>

</beans>
